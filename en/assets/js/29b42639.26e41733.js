"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[2096],{98776:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>t,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var r=o(17624),n=o(4552);const s={id:"micropython-timers",title:"Timers",slug:"/franzininho-wifi/exemplos-micropython/timers",description:"Descubra como os timers peri\xf3dicos e one-shot da Franzininho WiFi podem controlar e antecipar cen\xe1rios nos sistemas embarcados. Use-os para piscar LEDs, ler sensores etc.",author:"Sthefania Fernandes"},a=void 0,d={id:"FranzininhoWifi/exemplos-micropython/micropython-timers",title:"Timers",description:"Descubra como os timers peri\xf3dicos e one-shot da Franzininho WiFi podem controlar e antecipar cen\xe1rios nos sistemas embarcados. Use-os para piscar LEDs, ler sensores etc.",source:"@site/docs/FranzininhoWifi/exemplos-micropython/timers.md",sourceDirName:"FranzininhoWifi/exemplos-micropython",slug:"/franzininho-wifi/exemplos-micropython/timers",permalink:"/en/docs/franzininho-wifi/exemplos-micropython/timers",draft:!1,unlisted:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-micropython/timers.md",tags:[],version:"current",frontMatter:{id:"micropython-timers",title:"Timers",slug:"/franzininho-wifi/exemplos-micropython/timers",description:"Descubra como os timers peri\xf3dicos e one-shot da Franzininho WiFi podem controlar e antecipar cen\xe1rios nos sistemas embarcados. Use-os para piscar LEDs, ler sensores etc.",author:"Sthefania Fernandes"},sidebar:"docs",previous:{title:"Entradas e sa\xeddas digitais",permalink:"/en/docs/franzininho-wifi/exemplos-micropython/entradas-saidas-digitais"},next:{title:"Display OLED",permalink:"/en/docs/franzininho-wifi/exemplos-micropython/display-oled"}},t={},c=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:2},{value:"Timer peri\xf3dico",id:"timer-peri\xf3dico",level:2},{value:"Timer one-shot",id:"timer-one-shot",level:2},{value:"Recursos necess\xe1rios",id:"recursos-necess\xe1rios",level:2},{value:"C\xf3digo",id:"c\xf3digo",level:2},{value:"Blink LED com Timer Peri\xf3dico",id:"blink-led-com-timer-peri\xf3dico",level:3},{value:"Desativar LED utilizando timer one-shot",id:"desativar-led-utilizando-timer-one-shot",level:3}];function l(e){const i={code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"introdu\xe7\xe3o",children:"Introdu\xe7\xe3o"}),"\n",(0,r.jsx)(i.p,{children:"Em sistemas embarcados, a capacidade de controlar e antecipar uma variedade de cen\xe1rios \xe9 essencial. Nesse contexto, os temporizadores desempenham um papel fundamental, por oferecerem controle preciso sobre o tempo e a ordem de eventos em diversas aplica\xe7\xf5es."}),"\n",(0,r.jsx)(i.p,{children:"Neste artigo, abordaremos o controle de dois tipos distintos de temporizadores, o timer peri\xf3dico e o timer one-shot."}),"\n",(0,r.jsx)(i.h2,{id:"timer-peri\xf3dico",children:"Timer peri\xf3dico"}),"\n",(0,r.jsx)(i.p,{children:"O temporizador peri\xf3dico \xe9 um recurso utilizado para gerar interrup\xe7\xf5es ou eventos em intervalos pr\xe9-definidos de tempo. Seu funcionamento \xe9 simples, o temporizador ir\xe1 iniciar sua contagem de 0 at\xe9 o valor definido e, quando atinge o valor do per\xedodo configurado, ele gera uma interrup\xe7\xe3o ou dispara um evento. Ap\xf3s a interrup\xe7\xe3o ele reinicia automaticamente."}),"\n",(0,r.jsx)(i.p,{children:"Este timer pode ser utilizado para piscar LEDs, leitura de sensores, aquisi\xe7\xe3o de dados, dentre outras aplica\xe7\xf5es."}),"\n",(0,r.jsx)(i.h2,{id:"timer-one-shot",children:"Timer one-shot"}),"\n",(0,r.jsx)(i.p,{children:"O temporizador one-shot \xe9 um recurso utilizado para gerar uma \xfanica interrup\xe7\xe3o em um intervalo pr\xe9-definido de tempo. Diferente do timer peri\xf3dico, este ir\xe1 disparar apenas uma vez e, em seguida, parar at\xe9 que seja reiniciado no c\xf3digo."}),"\n",(0,r.jsx)(i.p,{children:"Este timer pode ser utilizado no debouncing de bot\xf5es, atrasos programados, temporizar tarefas \xfanicas, dentre outras aplica\xe7\xf5es."}),"\n",(0,r.jsx)(i.h2,{id:"recursos-necess\xe1rios",children:"Recursos necess\xe1rios"}),"\n",(0,r.jsx)(i.p,{children:"Para iniciar o trabalho com os GPIOs, \xe9 essencial possuir o diagrama de pinos da placa \xe0 disposi\xe7\xe3o, pois isso vai permitir que voc\xea identifique tanto os nomes quanto as fun\xe7\xf5es associadas a cada um deles."}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Pino"}),(0,r.jsx)(i.th,{children:"Recurso"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO1"}),(0,r.jsx)(i.td,{children:"LDR"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO2"}),(0,r.jsx)(i.td,{children:"BT6"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO3"}),(0,r.jsx)(i.td,{children:"BT5"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO4"}),(0,r.jsx)(i.td,{children:"BT4"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO5"}),(0,r.jsx)(i.td,{children:"BT3"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO6"}),(0,r.jsx)(i.td,{children:"BT2"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO7"}),(0,r.jsx)(i.td,{children:"BT1"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO8"}),(0,r.jsx)(i.td,{children:"OLED_SDA"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO9"}),(0,r.jsx)(i.td,{children:"OLED_SCL"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO10"}),(0,r.jsx)(i.td,{children:"TFT_DC"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO11"}),(0,r.jsx)(i.td,{children:"TFT_RES"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO12"}),(0,r.jsx)(i.td,{children:"LED AZUL"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO13"}),(0,r.jsx)(i.td,{children:"LED VERDE"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO14"}),(0,r.jsx)(i.td,{children:"LED VERMELHO"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO15"}),(0,r.jsx)(i.td,{children:"DHT11"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO17"}),(0,r.jsx)(i.td,{children:"BUZZER"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO35"}),(0,r.jsx)(i.td,{children:"TFT_SDA"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"IO36"}),(0,r.jsx)(i.td,{children:"TFT_SCL"})]})]})]}),"\n",(0,r.jsx)(i.p,{children:"Tabela 1 \u2013 Franzininho WiFi Lab01 mapeamento de pinos"}),"\n",(0,r.jsx)(i.h2,{id:"c\xf3digo",children:"C\xf3digo"}),"\n",(0,r.jsx)(i.h3,{id:"blink-led-com-timer-peri\xf3dico",children:"Blink LED com Timer Peri\xf3dico"}),"\n",(0,r.jsx)(i.p,{children:"Com a Franzininho WiFi conectada ao seu computador, abra o Thonny e crie um novo arquivo contendo o c\xf3digo a seguir:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:"from machine import Pin, Timer\nimport utime\n\nledR= Pin(14,Pin.OUT) #definindo o pino 14 (LED vermelho) como sa\xedda\ntemporizador = Timer(0) #definindo timer\n\nledState = False\n\ndef toogleLed ():\n    global ledState\n    ledState = not ledState\n    ledR.value(ledState)\n\ndef tempo (timer): #definindo fun\xe7\xe3o callback\n    global ledR\n    toogleLed() # muda estado do led\n\ntemporizador.init(period = 1000, mode = Timer.PERIODIC, callback = tempo) \n#configurando timer com frequ\xeancia de 1Hz e no modo peri\xf3dico\n"})}),"\n",(0,r.jsxs)(i.p,{children:["Vamos come\xe7ar com ",(0,r.jsx)(i.code,{children:"from machine import Pin, Timer"}),". Para poder ser acessado os pinos da placa e trabalhar com os timers. O timer foi configurado utilizando a vari\xe1vel ",(0,r.jsx)(i.code,{children:"temporizador"}),", e o LED selecionado foi o de cor vermelha, que est\xe1 conectado ao pino 14 da Franzininho WiFi (como verificado na tabela de pinagem)."]}),"\n",(0,r.jsxs)(i.p,{children:["Para configurar o timer \xe9 preciso chamar a fun\xe7\xe3o ",(0,r.jsx)(i.code,{children:"init"})," e preencher alguns par\xe2metros:"]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"}),": esse par\xe2metro define o tempo que levar\xe1 para o temporizador atingir zero e gerar uma interrup\xe7\xe3o. Vamos definir como 1000 (1Hz), isso far\xe1 com que o temporizador dure 1 segundo."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"mode"}),": esse par\xe2metro define o modo de funcionamento do temporizador e pode ter um dos seguintes valores:","\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.code,{children:"Timer.PERIODIC"})," \u2013 modo que usaremos neste exemplo"]}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"Timer.ONE_SHOT"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"callback"}),": esse par\xe2metro permite especificar a fun\xe7\xe3o de callback que ser\xe1 executada quando o temporizador atingir zero. Essa fun\xe7\xe3o de callback \xe9 chamada como uma interrup\xe7\xe3o, ent\xe3o ela deve ser projetada para ser curta e eficiente. A fun\xe7\xe3o de callback \xe9 \u201c",(0,r.jsx)(i.code,{children:"tempo"}),"\u201d."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"A fun\xe7\xe3o de callback, chamada de tempo, ser\xe1 chamada a cada segundo, pois essa foi a dura\xe7\xe3o definida para o temporizador. Seu papel \xe9 alterar o status do LED vermelho."}),"\n",(0,r.jsxs)(i.p,{children:["Para controlar o estado do LED vermelho foi criada a fun\xe7\xe3o ",(0,r.jsx)(i.code,{children:"toogle_led"}),". Inicialmente, a vari\xe1vel ",(0,r.jsx)(i.code,{children:"led_state"}),", que define o estado no LED (on ou off), \xe9 definida como ",(0,r.jsx)(i.code,{children:"false"})," e, a cada vez que a fun\xe7\xe3o ",(0,r.jsx)(i.code,{children:"toggle_led"})," \xe9 chamada, ela inverte o estado atual. A fun\xe7\xe3o \xe9 usada dentro da fun\xe7\xe3o callback ",(0,r.jsx)(i.code,{children:"tempo"}),", isso far\xe1 com que a cada segundo o LED vermelho seja alternado entre ligado e desligado. Assim, temos um blink LED."]}),"\n",(0,r.jsxs)(i.p,{children:["Note que dentro das fun\xe7\xf5es as vari\xe1veis s\xe3o alteradas para ",(0,r.jsx)(i.code,{children:"global"}),", isso \xe9 feito para garantir que as modifica\xe7\xf5es feitas dentro das fun\xe7\xf5es alterem o valor das vari\xe1veis fora delas."]}),"\n",(0,r.jsx)(i.h3,{id:"desativar-led-utilizando-timer-one-shot",children:"Desativar LED utilizando timer one-shot"}),"\n",(0,r.jsx)(i.p,{children:"Com a Franzininho WiFi conectada ao seu computador, abra o Thonny e crie um novo arquivo contendo o c\xf3digo a seguir:"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:'from machine import Pin, Timer\n\nledR= Pin(14,Pin.OUT) #definindo o pino 14 (LED vermelho) como sa\xedda\ntemporizador = Timer(0)\n\ndef desliga (timer): #definindo fun\xe7\xe3o callback\n    global ledR\n    ledR.off()\n    print("led desligado")\n\nprint("Iniciando o timer")\ntemporizador.init(period = 3000, mode = Timer.ONE_SHOT, callback = desliga)\nledR.on()\n'})}),"\n",(0,r.jsxs)(i.p,{children:["Vamos come\xe7ar com ",(0,r.jsx)(i.code,{children:"from machine import Pin, Timer"}),". Para poder ser acessado os pinos da placa e trabalhar com os timers. O timer foi configurado utilizando a vari\xe1vel ",(0,r.jsx)(i.code,{children:"temporizador"}),", e o LED selecionado foi o de cor vermelha, que est\xe1 conectado ao pino 14 da Franzininho WiFi (como verificado na tabela de pinagem)."]}),"\n",(0,r.jsx)(i.p,{children:"Para configurar o novo timer foi preciso alterar os seguintes par\xe2metros:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"period"}),": vamos definir como 3000 (3Hz), isso far\xe1 com que o temporizador dure 3 segundos."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"mode"}),": ",(0,r.jsx)(i.code,{children:"Timer.ONE_SHOT"})]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"callback"}),": a fun\xe7\xe3o de callback \xe9 \u201c",(0,r.jsx)(i.code,{children:"desliga"}),"\u201d."]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"A fun\xe7\xe3o de callback, chamada de desliga, ser\xe1 chamada uma vez ap\xf3s passados 3 segundos, pois essa foi a dura\xe7\xe3o definida para o temporizador. Sua finalidade \xe9 desativar o LED vermelho, que inicialmente est\xe1 ligado."}),"\n",(0,r.jsxs)(i.p,{children:["Nesse caso, diferente do timer peri\xf3dico, o LED ir\xe1 desligar ap\xf3s o tempo definido e somente ser\xe1 aceso outra vez se a fun\xe7\xe3o ",(0,r.jsx)(i.code,{children:"temporizador.init"})," for chamada novamente."]}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Autor"}),(0,r.jsx)(i.th,{children:"Sthefania Fernandes"})]})}),(0,r.jsx)(i.tbody,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"Data:"}),(0,r.jsx)(i.td,{children:"15/12/2023"})]})})]})]})}function m(e={}){const{wrapper:i}={...(0,n.M)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},4552:(e,i,o)=>{o.d(i,{I:()=>d,M:()=>a});var r=o(11504);const n={},s=r.createContext(n);function a(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);
"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[1680],{38988:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var o=n(17624),r=n(95788);const a={id:"circuitpython-serial-console",title:"Serial Console",slug:"/franzininho-wifi/exemplos-circuitpython/serial-console",description:"Neste texto vamos utilizar a comunica\xe7\xe3o serial do Franzininho WiFi para imprimir e coleta valores do console.",author:"Ewerton Leandro"},t=void 0,s={id:"FranzininhoWifi/exemplos-circuitpython/circuitpython-serial-console",title:"Serial Console",description:"Neste texto vamos utilizar a comunica\xe7\xe3o serial do Franzininho WiFi para imprimir e coleta valores do console.",source:"@site/docs/FranzininhoWifi/exemplos-circuitpython/serial-console.md",sourceDirName:"FranzininhoWifi/exemplos-circuitpython",slug:"/franzininho-wifi/exemplos-circuitpython/serial-console",permalink:"/en/docs/franzininho-wifi/exemplos-circuitpython/serial-console",draft:!1,unlisted:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-circuitpython/serial-console.md",tags:[],version:"current",frontMatter:{id:"circuitpython-serial-console",title:"Serial Console",slug:"/franzininho-wifi/exemplos-circuitpython/serial-console",description:"Neste texto vamos utilizar a comunica\xe7\xe3o serial do Franzininho WiFi para imprimir e coleta valores do console.",author:"Ewerton Leandro"},sidebar:"docs",previous:{title:"Hello World!",permalink:"/en/docs/franzininho-wifi/exemplos-circuitpython/hello-world"},next:{title:"Entradas e Sa\xeddas Digitais",permalink:"/en/docs/franzininho-wifi/exemplos-circuitpython/entradas-saidas-digitais"}},c={},l=[{value:"Materiais necess\xe1rios",id:"materiais-necess\xe1rios",level:2},{value:"Circuito",id:"circuito",level:2},{value:"C\xf3digo",id:"c\xf3digo",level:2},{value:"An\xe1lise do c\xf3digo",id:"an\xe1lise-do-c\xf3digo",level:2},{value:"Execu\xe7\xe3o",id:"execu\xe7\xe3o",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function d(e){const i={admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.MN)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.p,{children:"Neste exemplo iremos utilizar o console serial para controlar a cor do LED da Franzininho WiFi com CircuitPython."}),"\n",(0,o.jsx)(i.h2,{id:"materiais-necess\xe1rios",children:"Materiais necess\xe1rios"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"1 Placa Franzininho Wifi com CircuitPython;"}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"circuito",children:"Circuito"}),"\n",(0,o.jsx)(i.p,{children:"Para este exemplo n\xe3o ser\xe1 necess\xe1rio nenhum componente extra, apenas a placa Franzininho WiFi:"}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"franzininho-wifi-serial-console",src:n(11823).c+"",width:"758",height:"419"})}),"\n",(0,o.jsx)(i.p,{children:"Obs. Neste exemplo vamos utilizar o Mu Editor, mas qualquer editor com suporte a comunica\xe7\xe3o serial pode ser utilizado."}),"\n",(0,o.jsx)(i.h2,{id:"c\xf3digo",children:"C\xf3digo"}),"\n",(0,o.jsx)(i.p,{children:"Digite o c\xf3digo abaixo no arquivo code.py que est\xe1 no diret\xf3rio CIRCUITPY e salve o arquivo:"}),"\n",(0,o.jsx)(i.admonition,{title:"Observa\xe7\xe3o",type:"note",children:(0,o.jsx)(i.p,{children:"Provavelmente voc\xea encontrar\xe1 outro c\xf3digo no arquivo code.py.\nApague-o e insira o c\xf3digo novo."})}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:'# code.py\n\n""" Controle da cor do LED RGB atrav\xe9s da serial console """\nimport board\nimport digitalio\nimport neopixel_write\n\npin = digitalio.DigitalInOut(board.NEOPIXEL)\npin.direction = digitalio.Direction.OUTPUT\n\nwhile True:\n    print("Digite a intesidade da cor vermelho:")\n    r = int(input())\n    print("Digite a intesidade da cor verde:")\n    g = int(input())\n    print("Digite a intesidade da cor azul:")\n    b = int(input())\n    cor = bytearray([r, g, b])\n    neopixel_write.neopixel_write(pin, cor)\n    print("Cor: {} {} {}".format(r,g,b) )\n    print("[ENTER] - para mudar a cor.")\n    input()\n'})}),"\n",(0,o.jsx)(i.p,{children:"Finalizando a edi\xe7\xe3o do arquivo, salve-o.\nAp\xf3s salvar o arquivo, abra o console serial do Mu Editor."}),"\n",(0,o.jsx)(i.h2,{id:"an\xe1lise-do-c\xf3digo",children:"An\xe1lise do c\xf3digo"}),"\n",(0,o.jsx)(i.p,{children:"Para acessar os pinos da placa precisamos importar o m\xf3dulo board:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"import board\n"})}),"\n",(0,o.jsx)(i.p,{children:"Utilizaremos o LED Neopixel existente na pr\xf3pria placa da Franzininho WiFi, este LED est\xe1 conectado a GPIO 18 do ESP32-S2 da Franzininho WiFi."}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"franzininho-wifi-serial-console",src:n(89480).c+"",width:"760",height:"466"})}),"\n",(0,o.jsx)(i.p,{children:"Como o LED \xe9 um atuador, precisamos configurar o pino como uma sa\xedda digital. Para isso, precisamos importar o m\xf3dulo:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"import digitalio\n"})}),"\n",(0,o.jsx)(i.p,{children:"O LED RGB Neopixel utiliza um protocolo de comunica\xe7\xe3o espec\xedfico j\xe1 que dentro do LED existe um chip de controle integrado que controla os tr\xeas LED dentro do encapsulamento.\nPara facilitar a implementa\xe7\xe3o de nosso programa, optamos por utilizar um biblioteca dispon\xedvel dentro do pr\xf3prio circuitpython que \xe9 a neopixel_write:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"import neopixel_write\n"})}),"\n",(0,o.jsx)(i.p,{children:"Com todos os m\xf3dulos importados, podemos acessar as fun\xe7\xf5es de configura\xe7\xe3o do pino digital:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"pin = digitalio.DigitalInOut(board.NEOPIXEL)\npin.direction = digitalio.Direction.OUTPUT\n"})}),"\n",(0,o.jsx)(i.p,{children:"Note que primeiro mapeamos o pino e depois configuramos a dire\xe7\xe3o."}),"\n",(0,o.jsx)(i.p,{children:"Diferentemente de outros framework como Arduino, ESP-IDF e a maioria dos framework escrito em C/C++, o interpretador do Python j\xe1 habilitar UART para a comunica\xe7\xe3o serial por padr\xe3o, dispensado a inicializa\xe7\xe3o da serial como seria no Arduino por exemplo."}),"\n",(0,o.jsx)(i.p,{children:"Fragmento de c\xf3digo necess\xe1rio para configurar a comunica\xe7\xe3o serial no Arduino:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-c++",children:"Serial.begin(115200);\n"})}),"\n",(0,o.jsx)(i.admonition,{title:"Dica",type:"note",children:(0,o.jsxs)(i.p,{children:["Nunca mais voc\xea vai esquecer de habilitar a serial antes de tentar imprimir. ","\ud83d\ude09"]})}),"\n",(0,o.jsx)(i.p,{children:"Neste exemplo duas fun\xe7\xf5es s\xe3o importante destacar. S\xe3o as fun\xe7\xf5es que permite escrever e ler dados do console."}),"\n",(0,o.jsx)(i.p,{children:'A fun\xe7\xe3o "print" para imprimir mensagem no console serial.'}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:'print("Algum coisa para ser impresso na serial")\n'})}),"\n",(0,o.jsx)(i.p,{children:'E a fun\xe7\xe3o "input" para ler valores do console serial.'}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"uma_variavel = input()\n"})}),"\n",(0,o.jsx)(i.p,{children:"Agora vamos criar nosso loop principal:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"while True:\n    print('Digite a intensidade da cor vermelho:')\n    r = int(input())\n    print('Digite a intensidade da cor verde:')\n    g = int(input())\n    print('Digite a intensidade da cor azul:')\n    b = int(input())\n    cor = bytearray([r, g, b])\n    neopixel_write.neopixel_write(pin, cor)\n    print('Cor: {} {} {}'.format(r,g,b) )\n    print('[ENTER] - para mudar a cor.')\n    input()\n"})}),"\n",(0,o.jsx)(i.p,{children:"No loop principal iremos utilizar as fun\xe7\xf5es print/input para ler o valor das cores dos tr\xeas LED."}),"\n",(0,o.jsx)(i.p,{children:"Iremos montar um bytearray e chamar a fun\xe7\xe3o neopixel_write para atualizar a cor do LED Neopixel."}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"cor = bytearray([r, g, b])\n"})}),"\n",(0,o.jsx)(i.p,{children:"A fun\xe7\xe3o neopixel_write precisa apenas de dois par\xe2metros, o pino onde est\xe1 conectado o LED e um bytearray contendo um byte para cada uma das cores do LED."}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"neopixel_write.neopixel_write(pin, cor)\n"})}),"\n",(0,o.jsx)(i.p,{children:"O bytearray segue o seguinte formato: primeiro byte representa a intensidade do LED vermelho (Red), o segundo byte representa a intensidade do LED verde (Green) e o terceiro byte representa a intensidade do LED azul (Blue)."}),"\n",(0,o.jsx)(i.h2,{id:"execu\xe7\xe3o",children:"Execu\xe7\xe3o"}),"\n",(0,o.jsx)(i.p,{children:'Para abrir o console serial no Mu Editor, click no bot\xe3o "Serial" e depois pressione "Ctrl + D" para reiniciar a execu\xe7\xe3o do script na placa. Logo em seguida voc\xea poder\xe1 ver a primeira mensagem do script, solicitado o valor da primeira cor no console, a cor vermelha.'}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"franzininho-wifi-serial-console",src:n(42440).c+"",width:"1360",height:"726"})}),"\n",(0,o.jsx)(i.p,{children:"Aqui temos um exemplo de execu\xe7\xe3o no console serial do Mu Editor."}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"franzininho-wifi-serial-console",src:n(33572).c+"",width:"1030",height:"325"})}),"\n",(0,o.jsx)(i.p,{children:"Resultado da execu\xe7\xe3o na placa Franzininho WiFi."}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"franzininho-wifi-serial-console",src:n(17556).c+"",width:"1600",height:"1166"})}),"\n",(0,o.jsx)(i.p,{children:"Outro exemplo de execu\xe7\xe3o."}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"franzininho-wifi-serial-console",src:n(70596).c+"",width:"1280",height:"891"})}),"\n",(0,o.jsx)(i.admonition,{title:"Sugest\xe3o de experimento",type:"tip",children:(0,o.jsx)(i.p,{children:"Execute uma informando os valores [10,10,10], execute novamente agora informando os valores [100,100,100] e observe a diferen\xe7a entre as duas execu\xe7\xf5es."})}),"\n",(0,o.jsx)(i.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,o.jsx)(i.p,{children:"Neste exemplo exploramos duas importante ferramentas no desenvolvimento de qualquer projeto, a comunica\xe7\xe3o serial do console e o LED Builtin da placa Franzininho WiFi que tamb\xe9m \xe9 um LED Neopixel que pode dar um charme a mais a seus projetos!!!"}),"\n",(0,o.jsxs)(i.table,{children:[(0,o.jsx)(i.thead,{children:(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.th,{children:"Autor"}),(0,o.jsx)(i.th,{children:"Ewerton Leandro de Sousa"})]})}),(0,o.jsx)(i.tbody,{children:(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"Data:"}),(0,o.jsx)(i.td,{children:"07/10/2021"})]})})]})]})}function p(e={}){const{wrapper:i}={...(0,r.MN)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},95788:(e,i,n)=>{n.d(i,{MN:()=>l});var o=n(11504);function r(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function a(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);i&&(o=o.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,o)}return n}function t(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?a(Object(n),!0).forEach((function(i){r(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function s(e,i){if(null==e)return{};var n,o,r=function(e,i){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],i.indexOf(n)>=0||(r[n]=e[n]);return r}(e,i);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var i=o.useContext(c),n=i;return e&&(n="function"==typeof e?e(i):t(t({},i),e)),n},d={inlineCode:"code",wrapper:function(e){var i=e.children;return o.createElement(o.Fragment,{},i)}},p=o.forwardRef((function(e,i){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,h=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(h,t(t({ref:i},p),{},{components:n})):o.createElement(h,t({ref:i},p))}));p.displayName="MDXCreateElement"},17556:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/exemplo2-21fdde314416eddf012a6910081a7e2e.jpeg"},70596:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/exemplo3-be8b96c2fcf53cdaa581d2996e897d4d.jpeg"},11823:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/franzininho-wifi-3b55bb6358735fdb9708737760477e5b.png"},42440:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/mu1-d9e439fb33fd6469d96b580d0c518400.png"},33572:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/mu2-22111a44455aac8485e7acee915aa990.png"},89480:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/neopixel-6aba6a8ee3594d17ac2240dff080b576.png"}}]);
"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[3630],{87604:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>l});var o=n(17624),a=n(95788);const t={id:"circuitpython-entradas-saidas-digitais",title:"Entradas e Sa\xeddas Digitais",slug:"/franzininho-wifi/exemplos-circuitpython/entradas-saidas-digitais",description:"Este exemplo exibe como trabalhar com as entradas e sa\xeddas digitais na Franzininho WiFi",author:"Diana Santos"},r=void 0,s={id:"FranzininhoWifi/exemplos-circuitpython/circuitpython-entradas-saidas-digitais",title:"Entradas e Sa\xeddas Digitais",description:"Este exemplo exibe como trabalhar com as entradas e sa\xeddas digitais na Franzininho WiFi",source:"@site/docs/FranzininhoWifi/exemplos-circuitpython/entrada-saidas-digitais.md",sourceDirName:"FranzininhoWifi/exemplos-circuitpython",slug:"/franzininho-wifi/exemplos-circuitpython/entradas-saidas-digitais",permalink:"/en/docs/franzininho-wifi/exemplos-circuitpython/entradas-saidas-digitais",draft:!1,unlisted:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-circuitpython/entrada-saidas-digitais.md",tags:[],version:"current",frontMatter:{id:"circuitpython-entradas-saidas-digitais",title:"Entradas e Sa\xeddas Digitais",slug:"/franzininho-wifi/exemplos-circuitpython/entradas-saidas-digitais",description:"Este exemplo exibe como trabalhar com as entradas e sa\xeddas digitais na Franzininho WiFi",author:"Diana Santos"},sidebar:"docs",previous:{title:"Serial Console",permalink:"/en/docs/franzininho-wifi/exemplos-circuitpython/serial-console"},next:{title:"Entrada Anal\xf3gica",permalink:"/en/docs/franzininho-wifi/exemplos-circuitpython/entradas-analogicas"}},d={},l=[{value:"Materiais necess\xe1rios",id:"materiais-necess\xe1rios",level:2},{value:"Circuito",id:"circuito",level:2},{value:"C\xf3digo",id:"c\xf3digo",level:2},{value:"An\xe1lise do c\xf3digo",id:"an\xe1lise-do-c\xf3digo",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function c(e){const i={a:"a",admonition:"admonition",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.MN)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.p,{children:"Agora que j\xe1 entendemos a estrutura b\xe1sica de um programa no CircuitoPython, exploraremos os pinos de I/O como entrada e sa\xedda digital. Este exemplo exibe como ler um bot\xe3o (entrada digital) e acionar um LED (sa\xedda digital). Quando o bot\xe3o for pressionado o estado do LED dever\xe1 ser invertido. Assim, ao final teremos um bot\xe3o Liga/Desliga para controlar o LED."}),"\n",(0,o.jsx)(i.h2,{id:"materiais-necess\xe1rios",children:"Materiais necess\xe1rios"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"1 Placa Franzininho WiFi com CircuitPython;"}),"\n",(0,o.jsx)(i.li,{children:"1 Protoboard;"}),"\n",(0,o.jsx)(i.li,{children:"1 LED vermelho de 3 mm;"}),"\n",(0,o.jsx)(i.li,{children:"1 Resistor 330 \u03a9;"}),"\n",(0,o.jsx)(i.li,{children:"1 Bot\xe3o;"}),"\n",(0,o.jsx)(i.li,{children:"Jumpers."}),"\n"]}),"\n",(0,o.jsx)(i.h2,{id:"circuito",children:"Circuito"}),"\n",(0,o.jsx)(i.p,{children:"Fa\xe7a a seguinte montagem:"}),"\n",(0,o.jsx)(i.p,{children:(0,o.jsx)(i.img,{alt:"Circuito Entrada e Saida digital",src:n(68528).c+"",width:"1728",height:"753"})}),"\n",(0,o.jsx)(i.h2,{id:"c\xf3digo",children:"C\xf3digo"}),"\n",(0,o.jsx)(i.p,{children:"Digite o c\xf3digo abaixo no arquivo code.py que est\xe1 dentro do diret\xf3rio CIRCUITPY e salve o arquivo:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"# Entradas e Sa\xeddas digitais - Bot\xe3o Liga/Desliga\nimport time\nimport board\nfrom digitalio import DigitalInOut, Direction, Pull\n\n# Configura o pino do bot\xe3o\nbtn = DigitalInOut(board.IO5)      \t# mapea para pino 5 \nbtn.direction = Direction.INPUT  \t# configura como entrada\nbtn.pull = Pull.UP                  # habilita pull-up interno\n\n\n# Configura o pino do led\nled = DigitalInOut(board.IO4)       # mapea para pino 4 \nled.direction = Direction.OUTPUT   \t# configura como sa\xedda\n\n# loop infinito\nwhile True:\n\tif btn.value ==0:\t\t\t   \t# Se bot\xe3o pressionado                \n\t\tled.value=not led.value\t\t# inverte estado do LED\n\t\twhile btn.value==0:\t\t\t# Aguarda bot\xe3o ser solto\n\t\t\ttime.sleep(0.01)\t\t# delay de 10 ms\n"})}),"\n",(0,o.jsx)(i.h2,{id:"an\xe1lise-do-c\xf3digo",children:"An\xe1lise do c\xf3digo"}),"\n",(0,o.jsx)(i.p,{children:"Para acessar os pinos da placa precisamos importar o m\xf3dulo board:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"import board\n"})}),"\n",(0,o.jsx)(i.p,{children:"Como precisaremos de intervalos de temporiza\xe7\xe3o importamos o m\xf3dulo time:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"import time\n"})}),"\n",(0,o.jsx)(i.p,{children:"Trabalharemos como entradas e sa\xeddas digitais nesse exemplo. Para isso, precisamos importar os seguintes m\xf3dulos em digitalio:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"from digitalio import DigitalInOut, Direction\n"})}),"\n",(0,o.jsx)(i.p,{children:"O bot\xe3o deve ser configurado como uma entrada digital no pino 5. Al\xe9m disso, como n\xe3o usamos resistor de pull-up externo devemos configurar o pull-up interno:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"# Configura o pino do bot\xe3o\nbtn = DigitalInOut(board.IO5)      \t# mapea para pino 5 \nbtn.direction = Direction.INPUT  \t# configura como entrada\nbtn.pull = Pull.UP                  # habilita pull-up interno\n"})}),"\n",(0,o.jsx)(i.p,{children:"O LED foi configurado como uma sa\xedda digital no pino 4, da mesma forma que fizemos no exemplo anterior:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"# Configura o pino do led\nled = DigitalInOut(board.IO4)       # mapea para pino 4 \nled.direction = Direction.OUTPUT   \t# configura como sa\xedda\n"})}),"\n",(0,o.jsx)(i.p,{children:"No loop infinito testamos o valor do pio do bot\xe3o, caso esteja em n\xedvel 0 significa que o usu\xe1rio apertou. Assim toda vez que o bot\xe3o \xe9 pressionado o valor do LED \xe9 invertido. Para evitar que o sejam realizadas diversas opera\xe7\xf5es \xe9 aguardado que o usu\xe1rio solte o bot\xe3o antes de ler o bot\xe3o novamente. Essa espera \xe9 feita com um loop\nwhile:"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{className:"language-python",children:"# loop infinito\nwhile True:\n\tif btn.value ==0:\t\t\t   \t# Se bot\xe3o pressionado                \n\t\tled.value=not led.value\t\t# inverte estado do LED\n\t\twhile btn.value==0:\t\t\t# Aguarda bot\xe3o ser solto\n\t\t\ttime.sleep(0.01)\t\t# delay de 10 ms\n"})}),"\n",(0,o.jsx)(i.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,o.jsx)(i.p,{children:"Neste exemplo, fizemos uma aplica\xe7\xe3o simples para leitura de uma entrada digital(bot\xe3o) e acionamento de uma sa\xedda digital(LED). Esse exemplo servir\xe1 de base para quando voc\xea precisar trabalhar com entradas e sa\xeddas digitais em seus projetos. A configura\xe7\xe3o \xe9 sempre a mesma."}),"\n",(0,o.jsx)(i.admonition,{title:"Desafio",type:"tip",children:(0,o.jsx)(i.p,{children:"Inclua mais um bot\xe3o e mais um LED no circuito com funcionamento igual ao que fizemos."})}),"\n",(0,o.jsxs)(i.table,{children:[(0,o.jsx)(i.thead,{children:(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.th,{children:"Autor"}),(0,o.jsx)(i.th,{children:"Diana Santos"})]})}),(0,o.jsxs)(i.tbody,{children:[(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"Autor"}),(0,o.jsx)(i.td,{children:(0,o.jsx)(i.a,{href:"https://github.com/FBSeletronica",children:"F\xe1bio Souza"})})]}),(0,o.jsxs)(i.tr,{children:[(0,o.jsx)(i.td,{children:"Data:"}),(0,o.jsx)(i.td,{children:"16/09/2021"})]})]})]})]})}function p(e={}){const{wrapper:i}={...(0,a.MN)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},95788:(e,i,n)=>{n.d(i,{MN:()=>l});var o=n(11504);function a(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function t(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);i&&(o=o.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?t(Object(n),!0).forEach((function(i){a(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function s(e,i){if(null==e)return{};var n,o,a=function(e,i){if(null==e)return{};var n,o,a={},t=Object.keys(e);for(o=0;o<t.length;o++)n=t[o],i.indexOf(n)>=0||(a[n]=e[n]);return a}(e,i);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(o=0;o<t.length;o++)n=t[o],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=o.createContext({}),l=function(e){var i=o.useContext(d),n=i;return e&&(n="function"==typeof e?e(i):r(r({},i),e)),n},c={inlineCode:"code",wrapper:function(e){var i=e.children;return o.createElement(o.Fragment,{},i)}},p=o.forwardRef((function(e,i){var n=e.components,a=e.mdxType,t=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=a,h=u["".concat(d,".").concat(m)]||u[m]||c[m]||t;return n?o.createElement(h,r(r({ref:i},p),{},{components:n})):o.createElement(h,r({ref:i},p))}));p.displayName="MDXCreateElement"},68528:(e,i,n)=>{n.d(i,{c:()=>o});const o=n.p+"assets/images/00-circuito-366206a6cd9002f9e3db12f576d74713.png"}}]);
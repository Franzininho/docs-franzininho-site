"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[7024],{54712:(a,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>l});var n=o(17624),i=o(4552);const r={id:"circuitpython-pwm",title:"PWM - Pulse Width Modulation",slug:"/franzininho-wifi/exemplos-circuitpython/pwm",description:"Neste artigo vamos aprender a usar o PWM no CircuitPython, uma t\xe9cnica muito usada para controle de pot\xeancia. Veja como \xe9 f\xe1cil aplicar.",author:"Mateus Adriano Ventura Vieira"},s=void 0,t={id:"FranzininhoWifi/exemplos-circuitpython/circuitpython-pwm",title:"PWM - Pulse Width Modulation",description:"Neste artigo vamos aprender a usar o PWM no CircuitPython, uma t\xe9cnica muito usada para controle de pot\xeancia. Veja como \xe9 f\xe1cil aplicar.",source:"@site/docs/FranzininhoWifi/exemplos-circuitpython/pwm.md",sourceDirName:"FranzininhoWifi/exemplos-circuitpython",slug:"/franzininho-wifi/exemplos-circuitpython/pwm",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/pwm",draft:!1,unlisted:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-circuitpython/pwm.md",tags:[],version:"current",frontMatter:{id:"circuitpython-pwm",title:"PWM - Pulse Width Modulation",slug:"/franzininho-wifi/exemplos-circuitpython/pwm",description:"Neste artigo vamos aprender a usar o PWM no CircuitPython, uma t\xe9cnica muito usada para controle de pot\xeancia. Veja como \xe9 f\xe1cil aplicar.",author:"Mateus Adriano Ventura Vieira"},sidebar:"docs",previous:{title:"Entrada Anal\xf3gica",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/entradas-analogicas"},next:{title:"Pinos de Toque Capacitivo",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/touch-capacitivo"}},c={},l=[{value:"Materiais necess\xe1rios",id:"materiais-necess\xe1rios",level:2},{value:"Circuito",id:"circuito",level:2},{value:"C\xf3digo para PWM com CircuitPython",id:"c\xf3digo-para-pwm-com-circuitpython",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function d(a){const e={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.M)(),...a.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:"Neste artigo vamos aprender a usar o PWM no CircuitPython, uma t\xe9cnica muito usada para controle de pot\xeancia. Veja como \xe9 f\xe1cil aplicar."}),"\n",(0,n.jsx)(e.p,{children:"PWM \xe9 abrevia\xe7\xe3o para, Pulse Width Modulation \u2013 que significa \u2013 Modula\xe7\xe3o por Largura de Pulso. Essa \xe9 uma t\xe9cnica onde, uma sa\xedda digital \xe9 usada para simular uma sa\xedda anal\xf3gica. Isso acontece por meio de mudan\xe7as constantes de sinal, que s\xe3o impercept\xedveis e, dessa maneira o componente conectado a esse pino apenas tira uma m\xe9dia de quanto tempo est\xe1 em estado alto e baixo. Quanto mais tempo ligado, maior o valor e, consequentemente, quando menor tempo ligado, menor o valor."}),"\n",(0,n.jsx)(e.p,{children:"Neste exemplo, vamos aprender a usar PWM com CircuitPython na Franzininho WiFi."}),"\n",(0,n.jsx)(e.h2,{id:"materiais-necess\xe1rios",children:"Materiais necess\xe1rios"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"1 Placa Franzininho WiFi com CircuitPython;"}),"\n",(0,n.jsx)(e.li,{children:"1 Protoboard;"}),"\n",(0,n.jsx)(e.li,{children:"1 LED;"}),"\n",(0,n.jsx)(e.li,{children:"1 potenci\xf4metro de 10 k\u03a9;"}),"\n",(0,n.jsx)(e.li,{children:"1 resistor de 220 \u03a9 ou 330 \u03a9;"}),"\n",(0,n.jsx)(e.li,{children:"Jumpers."}),"\n"]}),"\n",(0,n.jsx)(e.h2,{id:"circuito",children:"Circuito"}),"\n",(0,n.jsx)(e.p,{children:"Para os nossos primeiros experimentos, realize a seguinte montagem:"}),"\n",(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.img,{alt:"franzininho-wifi-pwm",src:o(93e3).c+"",width:"1755",height:"678"}),"\nFigura 1 \u2013 Circuito para teste de PWM com CircuitPython na Franzininho WiFi"]}),"\n",(0,n.jsx)(e.h2,{id:"c\xf3digo-para-pwm-com-circuitpython",children:"C\xf3digo para PWM com CircuitPython"}),"\n",(0,n.jsxs)(e.p,{children:["Para esse c\xf3digo, utilizaremos a biblioteca simpleio, que ser\xe1 necess\xe1ria para realizarmos a convers\xe3o de valores. As bibliotecas do CircuitPython podem ser encontradas no seguinte endere\xe7o: ",(0,n.jsx)(e.a,{href:"https://circuitpython.org/libraries",children:"https://circuitpython.org/libraries"}),". Fa\xe7a o download, de acordo com a vers\xe3o do CircuitPython instalada na sua Franzininho WiFi."]}),"\n",(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:"franzininho-wifi-pwm",src:o(42700).c+"",width:"1543",height:"328"})}),"\n",(0,n.jsx)(e.p,{children:"Ap\xf3s baixar o arquivo, copie a pasta desejada para a pasta de arquivos da Franzininho WiFi:"}),"\n",(0,n.jsx)(e.p,{children:"simpleio.mpy"}),"\n",(0,n.jsx)(e.p,{children:"Escreva o c\xf3digo abaixo no arquivo code.py, que est\xe1 localizado no diret\xf3rio da Franzininho:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import pwmio\nimport math\nimport simpleio\nfrom analogio import AnalogIn\nfrom time import sleep\n\npotIn = board.IO2\npot = AnalogIn(potIn)\n\nLED = board.IO4\nled = pwmio.PWMOut(LED)\n\ndef converter(pin):\n    pinValue = pin.value\n    mapValue = math.trunc(simpleio.map_range\n               (pinValue, 536, 51355, 0, 65535))\n    print('Valor Original: ', pinValue,\n          'Valor Convertido: ', mapValue)\n    return mapValue\n\nwhile True:\n    potValue = converter(pot)\n    led.duty_cycle = potValue\n    sleep(0.1)\n"})}),"\n",(0,n.jsx)(e.p,{children:"Depois de finalizar a edi\xe7\xe3o do c\xf3digo, salve. Execute o programa."}),"\n",(0,n.jsx)(e.p,{children:"Utilizaremos o m\xf3dulo board para acessarmos os pinos da Franzininho:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import board\n"})}),"\n",(0,n.jsx)(e.p,{children:"E para configurarmos os pinos PWM, \xe9 necess\xe1rio importarmos o pwmio:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import pwmio\n"})}),"\n",(0,n.jsx)(e.p,{children:"Al\xe9m disso, ser\xe1 necess\xe1rio a biblioteca math, para \u201celiminar\u201d as casas decimais:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import math\n"})}),"\n",(0,n.jsx)(e.p,{children:"Como dito anteriormente, usaremos o m\xf3dulo simpleio:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"import simpleio\n"})}),"\n",(0,n.jsx)(e.p,{children:"Ademais, importaremos a fun\xe7\xe3o AnalogIn do m\xf3dulo analogio para, configuramos o potenci\xf4metro como uma entrada anal\xf3gica:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"from analogio import AnalogIn\n"})}),"\n",(0,n.jsx)(e.p,{children:"Tamb\xe9m, iremos chamar a fun\xe7\xe3o sleep, da biblioteca time, pois precisaremos de intervalos de temporiza\xe7\xe3o:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"from time import sleep\n"})}),"\n",(0,n.jsx)(e.p,{children:"Agora, ap\xf3s importarmos todas os m\xf3dulos que vamos utilizar, vamos configurar os pinos. Primeiro, vamos associar o GPIO2 a uma vari\xe1vel chamada potIn. Ap\xf3s isso, vamos criar um objeto chamado pot e configur\xe1-lo como uma entrada anal\xf3gica:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"LED = board.IO4\nled = pwmio.PWMOut(LED)\n"})}),"\n",(0,n.jsx)(e.p,{children:"Configura\xe7\xf5es iniciais encerradas! Depois disso, vamos criar uma fun\xe7\xe3o chamada converte. Como par\xe2metro, essa fun\xe7\xe3o receber\xe1 o pino que estamos realizando a leitura:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"def converter(pin):\n"})}),"\n",(0,n.jsx)(e.p,{children:"Dentro da fun\xe7\xe3o, realizaremos a leitura do valor do potenci\xf4metro, que ser\xe1 armazenada na vari\xe1vel pinValue:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"pinValue = pin.value\n"})}),"\n",(0,n.jsx)(e.p,{children:"Al\xe9m disso, vamos converter o valor do potenci\xf4metro para o valor aceito pelos pinos PWM. Para isso, vamos usar a fun\xe7\xe3o simpleio.map_range. Os par\xe2metros dessa fun\xe7\xe3o s\xe3o: valor bruto (no caso, o valor recebido naquele instante), valor m\xednimo de entrada, valor m\xe1ximo de entrada, valor m\xednimo de sa\xedda e valor m\xe1ximo de sa\xedda. E, vamos precisar da fun\xe7\xe3o math.trunc, que eliminar\xe1 as casas decimais. Todas essas informa\xe7\xf5es ficar\xe3o armazenadas na vari\xe1vel mapValue:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"mapValue = math.trunc(simpleio.map_range\n               (pinValue, 536, 51355, 0, 65535))\n"})}),"\n",(0,n.jsx)(e.p,{children:"Colocaremos o print apenas para visualizarmos a convers\xe3o:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"print('Valor Original: ', pinValue,\n          'Valor Convertido: ', mapValue)\n    return mapValue\n"})}),"\n",(0,n.jsx)(e.p,{children:"E a fun\xe7\xe3o nos retornar\xe1 o valor de mapValue:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"return mapValue\n"})}),"\n",(0,n.jsx)(e.p,{children:"E por fim, o loop. Dentro do while True, vamos associar o valor retornado pela fun\xe7\xe3o converte a vari\xe1vel potValue e mandar esse valor para o led. Para enviarmos um valor para o componente, utilizamos a fun\xe7\xe3o duty_cycle, que \xe9 o ciclo de trabalho, ou seja, quanto tempo o sinal estar\xe1 ligado ou n\xe3o. Tamb\xe9m, colocaremos um delay:"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-python",children:"while True:\n    potValue = converter(pot)\n    led.duty_cycle = potValue\n    sleep(0.1)\n"})}),"\n",(0,n.jsx)(e.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,n.jsx)(e.p,{children:"Nesse exemplo, aprendemos a como usar os pinos PWM com CircuitPython e, como control\xe1-los atrav\xe9s de um potenci\xf4metro. Al\xe9m disso, aprendemos a como mapear valores. No pr\xf3ximo exemplo, vamos aprender a como usar Servos Motores.\nOutros artigos da s\xe9rie."}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Autor"}),(0,n.jsx)(e.th,{children:"Mateus Adriano Ventura Vieira"})]})}),(0,n.jsx)(e.tbody,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"Data:"}),(0,n.jsx)(e.td,{children:"09/05/2022"})]})})]})]})}function p(a={}){const{wrapper:e}={...(0,i.M)(),...a.components};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(d,{...a})}):d(a)}},42700:(a,e,o)=>{o.d(e,{c:()=>n});const n=o.p+"assets/images/bundles-58357a122b96bde035495e9835cb75e7.png"},93e3:(a,e,o)=>{o.d(e,{c:()=>n});const n=o.p+"assets/images/pwm-eb18c8cc8e0dbfee8a2537d3706ee4c3.png"},4552:(a,e,o)=>{o.d(e,{I:()=>t,M:()=>s});var n=o(11504);const i={},r=n.createContext(i);function s(a){const e=n.useContext(r);return n.useMemo((function(){return"function"==typeof a?a(e):{...e,...a}}),[e,a])}function t(a){let e;return e=a.disableParentContext?"function"==typeof a.components?a.components(i):a.components||i:s(a.components),n.createElement(r.Provider,{value:e},a.children)}}}]);
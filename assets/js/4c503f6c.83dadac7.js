"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[6472],{20188:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>t,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>d,toc:()=>l});var a=i(17624),o=i(95788);const r={id:"entradas-saidas-digitais",title:"Entradas e Sa\xeddas Digitais",slug:"/franzininho-diy/entradas-saidas-digitais",description:"Nesse exemplo vamos aprender a trabalhar com as entradas e sa\xeddas digitais na Franzininho DIY"},s=void 0,d={id:"FranzininhoDIY/exemplos-arduino/entradas-saidas-digitais",title:"Entradas e Sa\xeddas Digitais",description:"Nesse exemplo vamos aprender a trabalhar com as entradas e sa\xeddas digitais na Franzininho DIY",source:"@site/docs/FranzininhoDIY/exemplos-arduino/entradas-saidas-digitais.md",sourceDirName:"FranzininhoDIY/exemplos-arduino",slug:"/franzininho-diy/entradas-saidas-digitais",permalink:"/docs/franzininho-diy/entradas-saidas-digitais",draft:!1,unlisted:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoDIY/exemplos-arduino/entradas-saidas-digitais.md",tags:[],version:"current",frontMatter:{id:"entradas-saidas-digitais",title:"Entradas e Sa\xeddas Digitais",slug:"/franzininho-diy/entradas-saidas-digitais",description:"Nesse exemplo vamos aprender a trabalhar com as entradas e sa\xeddas digitais na Franzininho DIY"},sidebar:"docs",previous:{title:"Configura\xe7\xe3o da Arduino IDE",permalink:"/docs/franzininho-diy/pacote"},next:{title:"Entradas Anal\xf3gicas",permalink:"/docs/franzininho-diy/entradas-analogicas"}},t={},l=[{value:"Configura\xe7\xe3o do modo de funcionamento do pino",id:"configura\xe7\xe3o-do-modo-de-funcionamento-do-pino",level:2},{value:"Sintaxe:",id:"sintaxe",level:3},{value:"Par\xe2metros:",id:"par\xe2metros",level:3},{value:"Exemplo de uso",id:"exemplo-de-uso",level:3},{value:"Escrita em um pino digital",id:"escrita-em-um-pino-digital",level:2},{value:"Sintaxe",id:"sintaxe-1",level:3},{value:"Par\xe2metros",id:"par\xe2metros-1",level:3},{value:"Exemplo de uso",id:"exemplo-de-uso-1",level:3},{value:"Simula\xe7\xe3o",id:"simula\xe7\xe3o",level:3},{value:"Leitura de um pino digital",id:"leitura-de-um-pino-digital",level:2},{value:"Sintaxe",id:"sintaxe-2",level:3},{value:"Par\xe2metros:",id:"par\xe2metros-2",level:3},{value:"Retorno",id:"retorno",level:3},{value:"Exemplo de uso",id:"exemplo-de-uso-2",level:3},{value:"C\xf3digo",id:"c\xf3digo",level:3},{value:"Simula\xe7\xe3o",id:"simula\xe7\xe3o-1",level:3}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.MN)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["Na Franzininho DIY temos ",(0,a.jsx)(n.strong,{children:"6 pinos"})," que podem ser usados como entradas ou sa\xeddas digitais( P0 a P5), conforme pinout:"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Pinagem Franzininho DIY",src:i(4428).c+"",width:"1209",height:"869"})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"Verificar limita\xe7\xf5es de uso dos pinos"})}),"\n",(0,a.jsx)(n.h2,{id:"configura\xe7\xe3o-do-modo-de-funcionamento-do-pino",children:"Configura\xe7\xe3o do modo de funcionamento do pino"}),"\n",(0,a.jsx)(n.p,{children:"Os pinos do ATtiny85 podem ser configurados como entradas ou sa\xeddas, al\xe9m de outras fun\xe7\xf5es. Para configura\xe7\xe3o como entrada ou sa\xedda digital vamos usar a seguinte fun\xe7\xe3o:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"pinMode()"})}),"\n",(0,a.jsx)(n.p,{children:"Configura um pino espec\xedfico para ser entrada ou sa\xedda digital."}),"\n",(0,a.jsx)(n.h3,{id:"sintaxe",children:"Sintaxe:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"pinMode(pino, modo);"})}),"\n",(0,a.jsx)(n.h3,{id:"par\xe2metros",children:"Par\xe2metros:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"pino:"})," corresponde ao pino que voc\xea ir\xe1 usar, no caso da Franzininho podemos usar pinos de 0 a 5."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"modo:"})," deve-se colocar o modo no qual se deseja configurar o pino:","\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"INPUT  =  Entrada: Esse pino receber\xe1 sinais vindos de um circuito externo"}),"\n",(0,a.jsx)(n.li,{children:"OUTPUT = Sa\xedda: Esse pino enviar\xe1 sinais para ativar um circuito externo"}),"\n",(0,a.jsx)(n.li,{children:"INPUT_PULLUP = Entrada digital com resistor de pull-up (ligado ao VCC) interno habilitado"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"exemplo-de-uso",children:"Exemplo de uso"}),"\n",(0,a.jsx)(n.p,{children:"Vamos configurar o pino P0 para leitura de uma tecla, portanto ser\xe1 uma entrada digital. Tamb\xe9m vamos configurar o pino P1 para acionamento do LED, ou seja, uma sa\xedda digital:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"int tecla = 0;   //pino da tecla\nint LED = 1;     //pino do LED\n\nvoid setup() {\n  pinMode(tecla, INPUT); //configura pino da tecla como entrada\n  pinMode(LED, OUTPUT);  //configura pino do LED como sa\xedda\n}\n\nvoid loop() {\n\n\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Geralmente as configura\xe7\xf5es s\xe3o realizadas dentro da fun\xe7\xe3o ",(0,a.jsx)(n.code,{children:"setup()"}),". Na fun\xe7\xe3o ",(0,a.jsx)(n.code,{children:"loop()"})," s\xe3o realizadas as tarefas durante o funcionamento da placa, como veremos mais \xe0 frente."]}),"\n",(0,a.jsx)(n.h2,{id:"escrita-em-um-pino-digital",children:"Escrita em um pino digital"}),"\n",(0,a.jsx)(n.p,{children:"Os pinos digitais configurados como sa\xeddas digitais podem assumir dois valores, conforme a escrita no c\xf3digo. Os valores podem ser HIGH ou LOW, que se traduzem em 5V ou 0V no pino da Franzininho. Para escrita digital vamos usar a seguinte fun\xe7\xe3o:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"digitalWrite()"})}),"\n",(0,a.jsx)(n.p,{children:"Coloca um n\xedvel l\xf3gico alto (HIGH, 5V) ou baixo (LOW, 0V) em um pino configurado como sa\xedda digital."}),"\n",(0,a.jsx)(n.h3,{id:"sintaxe-1",children:"Sintaxe"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"digitalWrite(pino, valor)"})}),"\n",(0,a.jsx)(n.h3,{id:"par\xe2metros-1",children:"Par\xe2metros"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"pino:"})," N\xfamero correspondente ao pino."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"valor:"})," HIGH ou LOW."]}),"\n",(0,a.jsx)(n.h3,{id:"exemplo-de-uso-1",children:"Exemplo de uso"}),"\n",(0,a.jsx)(n.p,{children:"Inverte o estado do LED (P1) em intervalos de 1 segundo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"const int LED = 1; //pino digital conectado ao LED\n\nvoid setup(){\n  pinMode(LED,OUTPUT); //pino digital de sa\xedda\n}\n\nvoid loop(){\n  digitalWrite(LED,HIGH);   //acende o led da placa\n  delay(1000);             //aguarda um segundo\n  digitalWrite(LED,LOW);  //apaga o led da placa\n  delay(1000);           //aguarda um segundo\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"simula\xe7\xe3o",children:"Simula\xe7\xe3o"}),"\n",(0,a.jsx)("iframe",{width:"100%",height:"458px",src:"https://wokwi.com/arduino/projects/310738934055305794?view=diagram"}),"\n",(0,a.jsxs)(n.p,{children:["A fun\xe7\xe3o ",(0,a.jsx)(n.code,{children:"delay(ms)"})," espera um tempo em milissegundos. No caso do exemplo acima, 1000 ms = 1 segundo;"]}),"\n",(0,a.jsx)(n.h2,{id:"leitura-de-um-pino-digital",children:"Leitura de um pino digital"}),"\n",(0,a.jsx)(n.p,{children:"Um pino digital pode assumir dois valores, HIGH e LOW, conforme o n\xedvel de tens\xe3o presente no mesmo: 5V ou 0V. Podemos usar o pino configurado como entrada digital para ler estados de sensores, que por sua vez representam estados de situa\xe7\xf5es, por exemplo:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"bot\xe3o solto ou pressionado;"}),"\n",(0,a.jsx)(n.li,{children:"porta aberta ou fechada"}),"\n",(0,a.jsx)(n.li,{children:"presen\xe7a de objeto ou n\xe3o presen\xe7a de objeto"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Para leitura de uma entrada digital usamos a seguinte fun\xe7\xe3o:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"digitalRead()"})}),"\n",(0,a.jsx)(n.p,{children:"L\xea o valor presente em um pino digital. Este valor pode ser HIGH ou LOW."}),"\n",(0,a.jsx)(n.h3,{id:"sintaxe-2",children:"Sintaxe"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"digitalRead(pino);"})}),"\n",(0,a.jsx)(n.h3,{id:"par\xe2metros-2",children:"Par\xe2metros:"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"pino:"})," n\xfamero do pino que se deseja ler."]}),"\n",(0,a.jsx)(n.h3,{id:"retorno",children:"Retorno"}),"\n",(0,a.jsx)(n.p,{children:"HIGH ou LOW."}),"\n",(0,a.jsx)(n.h3,{id:"exemplo-de-uso-2",children:"Exemplo de uso"}),"\n",(0,a.jsx)(n.p,{children:"Vamos ler o estado da tecla ligada ao pino P2 e acionar o LED ligado a pino P1 conforme o seu estado:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Circuito",src:i(41664).c+"",width:"1563",height:"702"})}),"\n",(0,a.jsx)(n.h3,{id:"c\xf3digo",children:"C\xf3digo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cpp",children:"const int LED = 1; //pino para o LED\nconst int BOTAO = 2; //pino para o bot\xe3o\n\nint val = 0; // val ser\xe1 utilizado para armazenar o estado do pino\n\nvoid setup(){\n  pinMode(LED,OUTPUT); //o LED \xe9 uma sa\xedda\n  pinMode(BOTAO,INPUT); //o BOTAO \xe9 uma entrada\n}\n\nvoid loop (){\n  val = digitalRead(BOTAO); // l\xea e armazena o valor de entrada\n  digitalWrite(LED, val); //aciona LED conforme valor lido do bot\xe3o\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"simula\xe7\xe3o-1",children:"Simula\xe7\xe3o"}),"\n",(0,a.jsx)("iframe",{width:"100%",height:"458px",src:"https://wokwi.com/arduino/projects/310739108383162946?view=diagram"})]})}function p(e={}){const{wrapper:n}={...(0,o.MN)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},95788:(e,n,i)=>{i.d(n,{MN:()=>l});var a=i(11504);function o(e,n,i){return n in e?Object.defineProperty(e,n,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[n]=i,e}function r(e,n){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),i.push.apply(i,a)}return i}function s(e){for(var n=1;n<arguments.length;n++){var i=null!=arguments[n]?arguments[n]:{};n%2?r(Object(i),!0).forEach((function(n){o(e,n,i[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(i,n))}))}return e}function d(e,n){if(null==e)return{};var i,a,o=function(e,n){if(null==e)return{};var i,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||(o[i]=e[i]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],n.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(o[i]=e[i])}return o}var t=a.createContext({}),l=function(e){var n=a.useContext(t),i=n;return e&&(i="function"==typeof e?e(n):s(s({},n),e)),i},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var i=e.components,o=e.mdxType,r=e.originalType,t=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),u=l(i),m=o,h=u["".concat(t,".").concat(m)]||u[m]||c[m]||r;return i?a.createElement(h,s(s({ref:n},p),{},{components:i})):a.createElement(h,s({ref:n},p))}));p.displayName="MDXCreateElement"},41664:(e,n,i)=>{i.d(n,{c:()=>a});const a=i.p+"assets/images/circuito-13e542231a501db4a7e2f774eee017e5.png"},4428:(e,n,i)=>{i.d(n,{c:()=>a});const a=i.p+"assets/images/pinagem-V2-7047a8d5930175670acc131497791fcc.png"}}]);
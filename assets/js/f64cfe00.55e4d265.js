"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[9464],{29960:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var a=i(17624),n=i(4552);const s={id:"franzininho-wifi-espidf-02",title:"Entrada digital",slug:"/franzininho-wifi/exemplos-espidf/entrada-digital",description:"Neste exemplo utilizou-se um bot\xe3o t\xe1ctil (entrada digital) para acionar um LED (sa\xedda digital) e mostra seu estado no terminal.",author:"Halysson Junior"},r=void 0,t={id:"FranzininhoWifi/exemplos-espidf/franzininho-wifi-espidf-02",title:"Entrada digital",description:"Neste exemplo utilizou-se um bot\xe3o t\xe1ctil (entrada digital) para acionar um LED (sa\xedda digital) e mostra seu estado no terminal.",source:"@site/docs/FranzininhoWifi/exemplos-espidf/0x02-entrada-digital.md",sourceDirName:"FranzininhoWifi/exemplos-espidf",slug:"/franzininho-wifi/exemplos-espidf/entrada-digital",permalink:"/docs/franzininho-wifi/exemplos-espidf/entrada-digital",draft:!1,unlisted:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-espidf/0x02-entrada-digital.md",tags:[],version:"current",frontMatter:{id:"franzininho-wifi-espidf-02",title:"Entrada digital",slug:"/franzininho-wifi/exemplos-espidf/entrada-digital",description:"Neste exemplo utilizou-se um bot\xe3o t\xe1ctil (entrada digital) para acionar um LED (sa\xedda digital) e mostra seu estado no terminal.",author:"Halysson Junior"},sidebar:"docs",previous:{title:"Hello World! ESP-IDF",permalink:"/docs/franzininho-wifi/exemplos-espidf/hello-world-esp-idf"},next:{title:"Entrada Anal\xf3gica",permalink:"/docs/franzininho-wifi/exemplos-espidf/entrada-analogica"}},d={},l=[{value:"Recursos Necess\xe1rios",id:"recursos-necess\xe1rios",level:2},{value:"<strong>Recursos Necess\xe1rios</strong>",id:"recursos-necess\xe1rios-1",level:2},{value:"Desenvolvimento",id:"desenvolvimento",level:2},{value:"Esquem\xe1tico",id:"esquem\xe1tico",level:3},{value:"C\xf3digo",id:"c\xf3digo",level:3},{value:"Compila\xe7\xe3o",id:"compila\xe7\xe3o",level:3},{value:"Resultados",id:"resultados",level:2},{value:"Conclus\xe3o",id:"conclus\xe3o",level:2}];function c(e){const o={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.p,{children:"Seguindo nas aplica\xe7\xf5es com o ESP-IDF naa placa Franzininho WiFi vamos dar continuidade aos trabalhos com o perif\xe9rico de Entrada/Sa\xedda de Prop\xf3sito Geral ou do ingl\xeas General Purpose Input/Output (GPIO) . O objetivo deste texto \xe9 apresentar um exemplo de projeto para configurar os pinos como entrada digital.  Ao final, estaremos preparados para manipular tanto as sa\xeddas digitais, vista anteriormente, quanto \xe0s entradas de digitais."}),"\n",(0,a.jsx)(o.h2,{id:"recursos-necess\xe1rios",children:"Recursos Necess\xe1rios"}),"\n",(0,a.jsx)(o.p,{children:"Os materiais necess\xe1rios para realizar esse exemplo s\xe3o:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Placa Franzininho WiFi;"}),"\n",(0,a.jsx)(o.li,{children:"Protoboard;"}),"\n",(0,a.jsx)(o.li,{children:"Bot\xe3o ou chave t\xe1ctil;"}),"\n",(0,a.jsx)(o.li,{children:"LED;"}),"\n",(0,a.jsx)(o.li,{children:"Resistor de 220 ou 330 Ohm;"}),"\n",(0,a.jsx)(o.li,{children:"Cabos Jumpers;"}),"\n",(0,a.jsx)(o.li,{children:"Computador com ESP-IDF instalado e configurado."}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"recursos-necess\xe1rios-1",children:(0,a.jsx)(o.strong,{children:"Recursos Necess\xe1rios"})}),"\n",(0,a.jsx)(o.p,{children:"Os materiais necess\xe1rios para realizar esse exemplo s\xe3o:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Placa Franzininho WiFi;"}),"\n",(0,a.jsx)(o.li,{children:"Protoboard;"}),"\n",(0,a.jsx)(o.li,{children:"Bot\xe3o ou chave t\xe1ctil;"}),"\n",(0,a.jsx)(o.li,{children:"LED;"}),"\n",(0,a.jsx)(o.li,{children:"Resistor de 220 ou 330 Ohm;"}),"\n",(0,a.jsx)(o.li,{children:"Cabos Jumpers;"}),"\n",(0,a.jsx)(o.li,{children:"Computador com ESP-IDF instalado e configurado."}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"desenvolvimento",children:"Desenvolvimento"}),"\n",(0,a.jsx)(o.p,{children:"Nesse artigo vamos apresentar um exemplo de projeto utilizando as duas fun\xe7\xf5es do perif\xe9rico GPIO: entrada digital e sa\xedda digital. Na entrada digital vamos realizar a leitura do bot\xe3o t\xe1ctil e armazenar seu estado em uma vari\xe1vel que ir\xe1 interagir com o monitor e um LED externo, atuando como uma sa\xedda digital que ir\xe1 nos indicar o estado atual do bot\xe3o."}),"\n",(0,a.jsxs)(o.p,{children:["O programa desenvolvido possibilita utilizar duas topologias de circuito : ",(0,a.jsx)(o.a,{href:"https://www.embarcados.com.br/como-dimensionar-resistores-de-pull-up/",children:(0,a.jsx)(o.strong,{children:"pull up"})})," ou ",(0,a.jsx)(o.a,{href:"https://www.embarcados.com.br/resistor-de-pull-down/",children:(0,a.jsx)(o.strong,{children:"pull down"})}),", para mais informa\xe7\xf5es sobre essas topologias acesse os links referente a cada circuito. Nesse exemplo de projeto iremos utilizar a topologia com o pull up interno do processador, desta forma deve-se observar os coment\xe1rios ao longo do c\xf3digo a fim de habilitar ou desabilitar as topologias de circuito."]}),"\n",(0,a.jsx)(o.p,{children:"Na placa Franzininho WiFI temos 38 pinos program\xe1veis com o perif\xe9rico GPIO, encorajamos aos leitores que alterem o c\xf3digo da forma como achar necess\xe1rio e praticar a codifica\xe7\xe3o do programa a fim de consolidar o conhecimento adquirido."}),"\n",(0,a.jsx)(o.h3,{id:"esquem\xe1tico",children:"Esquem\xe1tico"}),"\n",(0,a.jsxs)(o.p,{children:["Para darmos in\xedcio ao projeto \xe9 importante realizar a montagem do circuito em protoboard observando com cuidado as conex\xf5es, iremos conectar um dos terminais do resistor no ",(0,a.jsx)(o.strong,{children:"GPIO 2"})," e outro no LED externo por fim ligamos a ",(0,a.jsx)(o.strong,{children:"GPIO 15"})," no bot\xe3o t\xe1ctil. Abaixo segue o esquem\xe1tico proposto:"]}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.img,{alt:"circuito",src:i(96463).c+"",width:"1755",height:"702"})}),"\n",(0,a.jsx)(o.h3,{id:"c\xf3digo",children:"C\xf3digo"}),"\n",(0,a.jsxs)(o.p,{children:["O programa desenvolvido possui uma estrutura bem simples e n\xe3o \xe9 necess\xe1rio acrescentar nenhuma biblioteca, apenas a manuten\xe7\xe3o dos arquivos de cabe\xe7alho j\xe1 presentes no projeto. Ao criar um novo projeto no IDF automaticamente j\xe1 temos arquivos configurados e prontos para programa\xe7\xe3o do dispositivo, desta forma digite e comente as linhas do seguinte c\xf3digo no arquivo ",(0,a.jsx)(o.strong,{children:"main.c :"})]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-c",children:'/*\n    Autor : Halysson Junior\n    Data: 31/03/21\n    Descri\xe7\xe3o:\n    Neste exemplo utilizou-se um bot\xe3o t\xe1ctil (entrada digital) para acionar um LED (sa\xedda digital)\n    e mostra seu estado no terminal.\n\n*/\n\n// Inclus\xe3o arquivos de cabe\xe7alho\n\n#include <stdio.h>\n#include "freertos/FreeRTOS.h"\n#include "freertos/task.h"\n#include "driver/gpio.h"\n#include "sdkconfig.h"\n\n// Defini\xe7\xf5es de Pinos\n#define BTN 15\n#define LED 2\n\n// Defini\xe7\xe3o de habilita\xe7\xe3o (PULLUP / PULLDOWN)\n#define PULLUP\n// #define PULLDOWN (Para habilitar pulldown descomente aqui e comente -> " #define PULLUP ")\n\n// Defini\xe7\xf5es de estado l\xf3gico (caso altere para pulldown, deve-se inverter os estado l\xf3gicos)\n#define ON 1\n#define OFF 0\n\nvoid app_main(void){  // Main\n\n gpio_pad_select_gpio(LED);                \n gpio_set_direction(LED,GPIO_MODE_OUTPUT);// onfigura LED como sa\xedda digital\n\n gpio_pad_select_gpio(BTN);  \n gpio_set_direction(BTN,GPIO_MODE_INPUT); // Configura LED como sa\xedda digital\n\n  #ifdef PULLDOWN // Habilita pulldown\n\n   gpio_pulldown_en(BTN);\n   gpio_pullup_dis(BTN);  \n\n  #endif\n\n  #ifdef PULLUP  // Habilita pullup\n  gpio_pullup_en(BTN);\n  gpio_pulldown_dis(BTN);\n\n  #endif\n\n// V\xe1riavel Local\nbool last_state_btn = 0; // Armazena o \xfaltimo estado do bot\xe3o       \n\n    while (1) { // Loop\n\n    // V\xe1riavel Local  \n     bool state_btn = gpio_get_level(BTN); // Leitura do bot\xe3o\n\n      if(!state_btn && !last_state_btn) {\n          gpio_set_level(LED,ON);           // Se bot\xe3o for zero ent\xe3o ... liga LED\n          printf("LED LIGADO");             // Mostra informa\xe7\xe3o no monitor "LED LIGADO"\n          last_state_btn = true;            // Bot\xe3o pressionado\n      }\n\n      else if(state_btn && last_state_btn){\n        gpio_set_level(LED,OFF);            // Sen\xe3o... desliga LED\n         printf ("LED DESLIGADO");          // Mostra informa\xe7\xe3o no monitor "LED DESLIGADO"\n        last_state_btn = false;             // Bot\xe3o solto\n      }\n      vTaskDelay(1/ portTICK_PERIOD_MS);    // Rotina de Delay de 1 segundo\n      fflush(stdout);                       // Descarrega os buffers de sa\xedda de dados   \n\n    }// endLoop\n\n}// endMain\n'})}),"\n",(0,a.jsxs)(o.p,{children:["Voc\xea encontra o projeto completo na documenta\xe7\xe3o da Franzininho: ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.a,{href:"https://github.com/Franzininho/exemplos-esp-idf/tree/main/exemplos/Button",children:"Button"})})]}),"\n",(0,a.jsxs)(o.p,{children:["Caso ainda n\xe3o tenha instalado e configurado o IDF no seu computador ou tenha d\xfavidas sobre as ferramentas, acesse o tutorial de instala\xe7\xe3o (",(0,a.jsx)(o.a,{href:"https://franzininho.github.io/docs-franzininho-site/docs/franzininho-wifi-espidf/primeiros-passos",children:"Clique Aqui"}),")."]}),"\n",(0,a.jsx)(o.h3,{id:"compila\xe7\xe3o",children:"Compila\xe7\xe3o"}),"\n",(0,a.jsxs)(o.p,{children:["Ap\xf3s a codifica\xe7\xe3o vamos compilar o c\xf3digo, mas antes selecione o ",(0,a.jsx)(o.strong,{children:(0,a.jsx)(o.em,{children:"set-target"})})," para ESP 32-S2:"]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-bash",children:"idf.py set-target esp32s2\n"})}),"\n",(0,a.jsx)(o.p,{children:"Ao final da compila\xe7\xe3o o resultado final deve ser semelhante \xe0 imagem mostrada abaixo, em caso de erros retorne os passos anteriores e revise seu c\xf3digo."}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.img,{alt:"resultado da compila\xe7\xe3o",src:i(49908).c+"",width:"1064",height:"349"})}),"\n",(0,a.jsx)(o.p,{children:"Ap\xf3s a etapa de compila\xe7\xe3o vamos enviar o c\xf3digo fonte para nossa placa, no editor pressione o \xedcone abaixo e aguarde alguns segundos para assim dar in\xedcio ao programa \u201cButton\u201d(seta preta) e para vermos a sa\xedda de dados do nosso projeto clique no \xedcone no formato de monitor (seta vermelha):"}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.img,{alt:"atalhos de compila\xe7\xe3o",src:i(34340).c+"",width:"528",height:"54"})}),"\n",(0,a.jsx)(o.h2,{id:"resultados",children:"Resultados"}),"\n",(0,a.jsx)(o.p,{children:"Finalizando o exemplo de projeto o leitor deve ter observado que no programa Button, foram utilizadas as estruturas de condi\xe7\xe3o IF / ELSE IF para interagir com o estado atual do bot\xe3o, adicionou-se \xe0s uma nova label nativa para indicar as entradas digitais (GPIO_MODE_INPUT) e as fun\xe7\xf5es para indicar topologia do circuito ( gpio_pullup_en()/gpio pulldown_dis()) utilizado e verificar a leitura digital no pino definido no cabe\xe7alho do c\xf3digo."}),"\n",(0,a.jsx)(o.p,{children:"Abaixo segue o resultado final dos dados de sa\xedda no monitor:"}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.img,{alt:"sa\xedda monitor serial",src:i(29080).c+"",width:"539",height:"168"})}),"\n",(0,a.jsx)(o.p,{children:"Abaixo segue o nosso circuito do nosso projeto:"}),"\n",(0,a.jsx)(o.p,{children:(0,a.jsx)(o.img,{alt:"teste na bancada",src:i(9384).c+"",width:"1336",height:"668"})}),"\n",(0,a.jsx)(o.h2,{id:"conclus\xe3o",children:"Conclus\xe3o"}),"\n",(0,a.jsxs)(o.p,{children:["Nesse projeto conclu\xedmos o estudo do perif\xe9rico base para iniciar no mundo dos microcontroladores, pois a partir desse conhecimento adquirido podemos reciclar para as outras fam\xedlias do ESP32, como tamb\xe9m em outros chips baseados na linguagem C para estruturar seu programa. Como mencionado na se\xe7\xe3o de Desenvolvimento, este segundo artigo deseja consolidar o conhecimento nesse perif\xe9rico (GPIO), por tanto deixo o desafio de criar um contador de pulsos de 0 at\xe9 10 e reiniciado sempre quando forma maior que 10, ao final de cada contagem deve-se acionar um LED e mostrar quantas contagens j\xe1 foram feitas. Desejo sorte \xe0queles que ir\xe3o realizar o desafio e bons estudos, que a ",(0,a.jsx)(o.strong,{children:"for\xe7a esteja com todos n\xf3s."})]}),"\n",(0,a.jsxs)(o.table,{children:[(0,a.jsx)(o.thead,{children:(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.th,{children:"Autor"}),(0,a.jsx)(o.th,{children:(0,a.jsx)(o.a,{href:"https://github.com/halyssonJr",children:"Halysson Junior"})})]})}),(0,a.jsx)(o.tbody,{children:(0,a.jsxs)(o.tr,{children:[(0,a.jsx)(o.td,{children:"Data:"}),(0,a.jsx)(o.td,{children:"01/06/2021"})]})})]})]})}function p(e={}){const{wrapper:o}={...(0,n.M)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},96463:(e,o,i)=>{i.d(o,{c:()=>a});const a=i.p+"assets/images/1-124f6f4ee8bacde41bd8a9e355dc439a.png"},49908:(e,o,i)=>{i.d(o,{c:()=>a});const a=i.p+"assets/images/2-9dcac030cd53ee20f535abf4683f595c.png"},34340:(e,o,i)=>{i.d(o,{c:()=>a});const a=i.p+"assets/images/3-e82c6cff8b1723ecc738df1fa83a7f4d.png"},29080:(e,o,i)=>{i.d(o,{c:()=>a});const a=i.p+"assets/images/4-398af45ebe97733b089183f9be584ceb.png"},9384:(e,o,i)=>{i.d(o,{c:()=>a});const a=i.p+"assets/images/5-38b38892827b20fb4c4fad0565d3620c.png"},4552:(e,o,i)=>{i.d(o,{I:()=>t,M:()=>r});var a=i(11504);const n={},s=a.createContext(n);function r(e){const o=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(s.Provider,{value:o},e.children)}}}]);
"use strict";(self.webpackChunkFranzininho=self.webpackChunkFranzininho||[]).push([[8560],{3905:(e,a,o)=>{o.d(a,{Zo:()=>l,kt:()=>f});var i=o(7294);function t(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function n(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,i)}return o}function r(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?n(Object(o),!0).forEach((function(a){t(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function s(e,a){if(null==e)return{};var o,i,t=function(e,a){if(null==e)return{};var o,i,t={},n=Object.keys(e);for(i=0;i<n.length;i++)o=n[i],a.indexOf(o)>=0||(t[o]=e[o]);return t}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)o=n[i],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(t[o]=e[o])}return t}var p=i.createContext({}),c=function(e){var a=i.useContext(p),o=a;return e&&(o="function"==typeof e?e(a):r(r({},a),e)),o},l=function(e){var a=c(e.components);return i.createElement(p.Provider,{value:a},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var a=e.children;return i.createElement(i.Fragment,{},a)}},u=i.forwardRef((function(e,a){var o=e.components,t=e.mdxType,n=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),m=c(o),u=t,f=m["".concat(p,".").concat(u)]||m[u]||d[u]||n;return o?i.createElement(f,r(r({ref:a},l),{},{components:o})):i.createElement(f,r({ref:a},l))}));function f(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var n=o.length,r=new Array(n);r[0]=u;var s={};for(var p in a)hasOwnProperty.call(a,p)&&(s[p]=a[p]);s.originalType=e,s[m]="string"==typeof e?e:t,r[1]=s;for(var c=2;c<n;c++)r[c]=o[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,o)}u.displayName="MDXCreateElement"},641:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>c});var i=o(3117),t=(o(7294),o(3905));const n={id:"franzininho-wifi-espidf-05",title:"Primeiros passos com a AWS",slug:"/franzininho-wifi/exemplos-espidf/aws",description:"Primeiros passos para conectar a Franzininho WiFi na AWS via MQTT pelo AWS IoT Core.",author:"Ana Carolina Cabral (ana.cpmelo95@gmail.com)"},r=void 0,s={unversionedId:"FranzininhoWifi/exemplos-espidf/franzininho-wifi-espidf-05",id:"FranzininhoWifi/exemplos-espidf/franzininho-wifi-espidf-05",title:"Primeiros passos com a AWS",description:"Primeiros passos para conectar a Franzininho WiFi na AWS via MQTT pelo AWS IoT Core.",source:"@site/docs/FranzininhoWifi/exemplos-espidf/0x05-AWS-IoT-Core.md",sourceDirName:"FranzininhoWifi/exemplos-espidf",slug:"/franzininho-wifi/exemplos-espidf/aws",permalink:"/docs/franzininho-wifi/exemplos-espidf/aws",draft:!1,editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-espidf/0x05-AWS-IoT-Core.md",tags:[],version:"current",frontMatter:{id:"franzininho-wifi-espidf-05",title:"Primeiros passos com a AWS",slug:"/franzininho-wifi/exemplos-espidf/aws",description:"Primeiros passos para conectar a Franzininho WiFi na AWS via MQTT pelo AWS IoT Core.",author:"Ana Carolina Cabral (ana.cpmelo95@gmail.com)"},sidebar:"docs",previous:{title:"PWM com LEDC",permalink:"/docs/franzininho-wifi/exemplos-espidf/ledc"},next:{title:"Primeiros Passos",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/primeiros-passos"}},p={},c=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",level:3},{value:"AWS IOT Core",id:"aws-iot-core",level:3},{value:"Parte 1 - Criando a Franzininho na AWS",id:"parte-1---criando-a-franzininho-na-aws",level:3},{value:"Parte 2 - Conectando a Franzininho com ESP-IDF",id:"parte-2---conectando-a-franzininho-com-esp-idf",level:3},{value:"Parte 3 - Monitorando a Franzininho",id:"parte-3---monitorando-a-franzininho",level:3}],l={toc:c},m="wrapper";function d(e){let{components:a,...n}=e;return(0,t.kt)(m,(0,i.Z)({},l,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("h3",{id:"introdu\xe7\xe3o"},"Introdu\xe7\xe3o"),(0,t.kt)("p",null,"Neste tutorial exploraremos a utiliza\xe7\xe3o do AWS IoT Core para conectar a placa Franzininho WiFi \xe0 nuvem utilizando o ESP-IDF. Al\xe9m do IoT Core, a AWS oferece v\xe1rias outras formas de conectar um dispositivo, como AWS IoT Greengrass Stream Manager ou AWS IoT SiteWise. Esses outros servi\xe7os para ingest\xe3o e visualiza\xe7\xe3o de dados podem ser vistos nesse ",(0,t.kt)("a",{parentName:"p",href:"https://aws.amazon.com/pt/blogs/iot/7-patterns-for-iot-data-ingestion-and-visualization-how-to-decide-what-works-best-for-your-use-case/"},"link"),"."),(0,t.kt)("h3",{id:"aws-iot-core"},"AWS IOT Core"),(0,t.kt)("p",null,"O AWS IoT Core \xe9 o broker de mensagens que permite conectar dispositivos IoT com a nuvem AWS e seus diversos servi\xe7os. Atrav\xe9s dele, podemos criar, configurar e gerenciar nossos dispositivos."),(0,t.kt)("p",null,"Atualmente suporta os seguintes protocolos de comunica\xe7\xe3o:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"MQTT"),(0,t.kt)("li",{parentName:"ul"},"MQTT over WSS (Websockets Secure)"),(0,t.kt)("li",{parentName:"ul"},"HTTPS"),(0,t.kt)("li",{parentName:"ul"},"LoRaWAN")),(0,t.kt)("p",null,"Resumidamente, o servi\xe7o se baseia em:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Things:")," Dispositivos (\u201ccoisas\u201d) que queremos conectar;"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Jobs:")," A\xe7\xf5es remotas que voc\xea pode agendar para realizar opera\xe7\xf5es nos seus dispositivos, como atualiza\xe7\xf5es de firmware;"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Rules:")," Regras atrav\xe9s das quais podemos direcionar as mensagens recebidas pelo broker para outros servi\xe7os da AWS, por exemplo, para armazenar dados no DynamoDB."),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("strong",{parentName:"li"},"Seguran\xe7a:")," onde \xe9 poss\xedvel gerenciar os certificados de autoriza\xe7\xe3o, pol\xedticas (policies) e papeis (roles) de autentica\xe7\xe3o.")),(0,t.kt)("h3",{id:"parte-1---criando-a-franzininho-na-aws"},"Parte 1 - Criando a Franzininho na AWS"),(0,t.kt)("p",null,"Para seguir o tutorial, voc\xea deve ter acesso ao console da AWS. Para come\xe7ar, vamos criar uma nova \u201ccoisa\u201d (thing) para representar nossa Franzininho na nuvem. Certifique-se que voc\xea est\xe1 na regi\xe3o mais pr\xf3xima antes de come\xe7ar, selecionando-a no menu do canto superior direito. Para o Brasil, a regi\xe3o \xe9 sa-east-1."),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Na AWS, procure pelo servi\xe7o IoT Core (",(0,t.kt)("inlineCode",{parentName:"p"},"Service > Internet of Things >  IoT core"),") e crie uma nova \u201ccoisa\u201d em ",(0,t.kt)("inlineCode",{parentName:"p"},"Manage > All devices > Things > Create new thing"),".")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Vamos criar apenas um dispositivo (",(0,t.kt)("em",{parentName:"p"},"Create a single thing"),"), mas saiba que tamb\xe9m \xe9 poss\xedvel criar v\xe1rios de uma vez (",(0,t.kt)("em",{parentName:"p"},"Create many things"),"). Voc\xea precisar\xe1 especificar as propriedades desse dispositivo:"))),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Thing name: o nome do seu dispositivo para identific\xe1-lo de forma \xfanica. Escolha sabiamente, pois essa propriedade n\xe3o pode ser alterada depois que o dispositivo \xe9 criado."),(0,t.kt)("li",{parentName:"ul"},"Configura\xe7\xf5es adicionais: podem ser utilizadas para detalhar, organizar, gerenciar e pesquisar os dispositivos, como tipo, atributos ou grupos."),(0,t.kt)("li",{parentName:"ul"},"Device shadow permite que o estado do seu dispositivo fique dispon\xedvel para outros servi\xe7os mesmo que ele n\xe3o esteja conectado.")),(0,t.kt)("p",null,"Por enquanto, basta preencher o nome e prosseguir. Chamarei o meu carinhosamente de Franz."),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Criar thing",src:o(34).Z,width:"808",height:"808"})),(0,t.kt)("ol",{start:3},(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Para conseguir se autenticar ao seriv\xe7o da AWS, cada dispositivo deve ter um certificado. Utilizaremos o gerado automaticamente (",(0,t.kt)("em",{parentName:"p"},"Auto-generate a new certificate"),"), mas voc\xea tamb\xe9m tem a op\xe7\xe3o de utilizar certificados pr\xf3prios.")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Para gerenciar o n\xedvel de acesso desse certificado aos recursos, \xe9 preciso criar uma pol\xedtica de autoriza\xe7\xe3o (",(0,t.kt)("em",{parentName:"p"},"policy"),"), que \xe9 uma lista de a\xe7\xf5es permitidas ou proibidas para aquele certificado. Voc\xea pode criar uma pol\xedtica direto dessa aba, em ",(0,t.kt)("em",{parentName:"p"},"Create policy"),", ou pela barra de navega\xe7\xe3o do IoT Core em ",(0,t.kt)("em",{parentName:"p"},"Security > Policies"),"."))),(0,t.kt)("p",null,"Uma ",(0,t.kt)("em",{parentName:"p"},"policy")," deve ter um nome e uma ou mais declara\xe7\xf5es (",(0,t.kt)("em",{parentName:"p"},"statements"),"). Cada declara\xe7\xe3o \xe9 composta por um ",(0,t.kt)("strong",{parentName:"p"},"efeito")," de uma ",(0,t.kt)("strong",{parentName:"p"},"a\xe7\xe3o")," \xe0 um ",(0,t.kt)("strong",{parentName:"p"},"recurso"),"."),(0,t.kt)("p",null,"O ",(0,t.kt)("strong",{parentName:"p"},"efeito")," pode ser de permiss\xe3o (",(0,t.kt)("em",{parentName:"p"},"allow"),") ou proibi\xe7\xe3o (",(0,t.kt)("em",{parentName:"p"},"deny"),")."),(0,t.kt)("p",null,"As poss\xedveis ",(0,t.kt)("strong",{parentName:"p"},"a\xe7\xf5es")," desse servi\xe7o s\xe3o v\xe1rias, mas utilizaremos as seguintes principais:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("em",{parentName:"li"},"iot:Connect:")," permite a conex\xe3o do dispositivo ao servi\xe7o;"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("em",{parentName:"li"},"iot:Publish:")," permite que o dispositivo publique mensagens no broker;"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("em",{parentName:"li"},"iot:Receive:")," permite que o dispositivo receba mensagem do broker;"),(0,t.kt)("li",{parentName:"ul"},(0,t.kt)("em",{parentName:"li"},"iot:Subscribe:")," permite que o dispositivo se inscreva nos t\xf3picos do broker.")),(0,t.kt)("p",null,"E o ",(0,t.kt)("strong",{parentName:"p"},"recurso")," \xe9 o nome do servi\xe7o da AWS que a a\xe7\xe3o vai se utilizar, neste caso ",(0,t.kt)("em",{parentName:"p"},"arn:aws:iot:",(0,t.kt)("strong",{parentName:"em"},"region"),":",(0,t.kt)("strong",{parentName:"em"},"account-id")),"."),(0,t.kt)("p",null,"Voc\xea pode adicionar policies j\xe1 existentes utilizando a aba ",(0,t.kt)("em",{parentName:"p"},"Policy Examples")," ou cri\xe1-las manualmente. Para este exemplo, utilizei as seguintes pol\xedticas:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": "iot:Connect",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:client/${iot:Connection.Thing.ThingName}"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Publish",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:client/${iot:Connection.Thing.ThingName}"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Subscribe",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:topicfilter/${iot:Connection.Thing.ThingName}/*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Publish",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:topic/${iot:Connection.Thing.ThingName}/*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Receive",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:topic/${iot:Connection.Thing.ThingName}/*"\n    }\n  ]\n}\n')),(0,t.kt)("p",null,"Altere o ",(0,t.kt)("inlineCode",{parentName:"p"},"<account-id>")," para o n\xfamero da sua conta, dispon\xedvel no menu do canto superior direito."),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Account ID",src:o(1118).Z,width:"317",height:"423"})),(0,t.kt)("ol",{start:5},(0,t.kt)("li",{parentName:"ol"},"Por fim, baixe os arquivos de certificados e chaves que a AWS criou automaticamente para autenticar esse dispositivo. Este \xe9 o \xfanico momento que voc\xea conseguir\xe1 baixar as chaves para esse certificado, ent\xe3o guarde-as com carinho para utiliz\xe1-los no pr\xf3ximo passo.")),(0,t.kt)("h3",{id:"parte-2---conectando-a-franzininho-com-esp-idf"},"Parte 2 - Conectando a Franzininho com ESP-IDF"),(0,t.kt)("p",null,"Agora que temos nosso dispositivo configurado, precisamos escrever o firmware para conect\xe1-lo. A pr\xf3pria Espressif disponibiliza um SDK para comunica\xe7\xe3o com AWS IoT baseada no FreeRTOS. Para utilizar, basta clonar o reposit\xf3rio, preferencialmente direto na pasta de componentes do seu diret\xf3rio de instala\xe7\xe3o."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/espressif/esp-aws-iot <esp-dir-path>/esp-idf/components\n")),(0,t.kt)("p",null,"Dentro desse componente, j\xe1 s\xe3o disponibilizados alguns exemplos para utilizar com a AWS. Vamos come\xe7ar utilizando o exemplo b\xe1sico de MQTT em ",(0,t.kt)("inlineCode",{parentName:"p"},"examples/mqtt/tls_mutual_auth"),"."),(0,t.kt)("p",null,"Para configurar, utilizaremos o ",(0,t.kt)("em",{parentName:"p"},"menuconfig"),":"),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Nas configura\xe7\xf5es do exemplo (",(0,t.kt)("em",{parentName:"li"},"Example Configuration"),"), insira o nome do dispositivo exatamente como foi criado na AWS (Franz, no meu caso) e o endpoint do broker MQTT, que est\xe1 dispon\xedvel no menu ",(0,t.kt)("inlineCode",{parentName:"li"},"AWS IoT > Settings > Device endpoint")," na sua conta do AWS. As demais configura\xe7\xf5es podem ser deixadas como padr\xe3o.")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Device Endpoint",src:o(6749).Z,width:"1136",height:"919"}),"\n",(0,t.kt)("img",{alt:"Menuconfig",src:o(7964).Z,width:"719",height:"146"})),(0,t.kt)("ol",{start:2},(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Nas configura\xe7\xf5es de rede (",(0,t.kt)("em",{parentName:"p"},"Example Connection Configuration"),"), insira as configura\xe7\xf5es da sua rede Wi-Fi (SSID e senha)")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"O m\xe9todo padr\xe3o de autentica\xe7\xe3o com a AWS \xe9 utilizando credenciais PKI embarcadas no diret\xf3rio certs/. Lembra dos certificados que foram gerados automaticamente ao criar um dispositivo? \xc9 aqui que voc\xea vai coloc\xe1-los para embarcar no dispositivo. Copie o certificado, a chave ",(0,t.kt)("strong",{parentName:"p"},"privada")," e um dos certificados de root que voc\xea tinha armazenado anteriormente."))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"cp certificate.pem.crt main/certs/client.crt\ncp private.pem.key main/certs/client.key\ncp AmazonRootCAx.pem main/certs/root_cert_auth.pem\n")),(0,t.kt)("p",null,"Com tudo configurado, \xe9 s\xf3 buildar e passar pra placa (siga o tutorial em ",(0,t.kt)("a",{parentName:"p",href:"https://docs.franzininho.com.br/docs/franzininho-wifi/exemplos-espidf/primeiros-passos"},"Primeiros passos"),"). Este exemplo se conecta ao broker MQTT, se sobrescreve no t\xf3pico ",(0,t.kt)("inlineCode",{parentName:"p"},'CLIENT_IDENTIFIER "/example/topic\u201d')," (Franz/example/topic, por exemplo) e publica mensagens de Hello World."),(0,t.kt)("p",null,"Sua conex\xe3o foi estabelecida com sucesso caso receba a mensagem a seguir:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},"I (7329) coreMQTT: Connection accepted.\nI (7339) coreMQTT: Received MQTT CONNACK successfully from broker.\nI (7349) coreMQTT: MQTT connection established with the broker.\nI (7349) coreMQTT: MQTT connection successfully established with broker.\n")),(0,t.kt)("h3",{id:"parte-3---monitorando-a-franzininho"},"Parte 3 - Monitorando a Franzininho"),(0,t.kt)("p",null,"Agora que a Franzininho est\xe1 conectado, podemos monitorar sua atividade pelo console da AWS."),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Voc\xea pode ver as mensagens mais recentes em ",(0,t.kt)("inlineCode",{parentName:"li"},"Manage > Things > Nome do seu dispositivo > Activity"),".")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"Menu Activity",src:o(3135).Z,width:"1847",height:"858"})),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"E voc\xea tamb\xe9m pode interagir atrav\xe9s do MQTT Test Client, por exemplo, publicando no t\xf3pico ",(0,t.kt)("inlineCode",{parentName:"li"},'CLIENT_IDENTIFIER "/example/topic\u201d')," que estamos inscritos.")),(0,t.kt)("p",null,(0,t.kt)("img",{alt:"MQTT Test Client",src:o(7316).Z,width:"1486",height:"818"})),(0,t.kt)("p",null,"A mensagem recebida pode ser vista na Franzininho:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-bash"},'I (17668) coreMQTT: Packet received. ReceivedBytes=66.\nI (17668) coreMQTT: De-serialized incoming PUBLISH packet: DeserializerResult=MQTTSuccess.\nI (17668) coreMQTT: State record updated. New state=MQTTPublishDone.\nI (17678) coreMQTT: Incoming QOS : 0.\nI (17678) coreMQTT: Incoming Publish Topic Name: Franz/example/topic matches subscribed topic.\nIncoming Publish message Packet Id is 0.\nIncoming Publish Message : {\n  "message": "Hello from AWS IoT console"\n}.\n')),(0,t.kt)("p",null,"E \xe9 isso, agora voc\xea pode brincar de Internet das Coisas com sua Franzininho WiFi utilizando a AWS!"),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",{parentName:"tr",align:null},"Autora"),(0,t.kt)("th",{parentName:"tr",align:null},(0,t.kt)("a",{parentName:"th",href:"https://github.com/carolcabral"},"Ana Carolina Cabral ")))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:null},"Data:"),(0,t.kt)("td",{parentName:"tr",align:null},"07/01/2023")))))}d.isMDXComponent=!0},34:(e,a,o)=>{o.d(a,{Z:()=>i});const i=o.p+"assets/images/1-Create-thing-38ca8a9bbe949f6fd7bb29c1746f3175.png"},1118:(e,a,o)=>{o.d(a,{Z:()=>i});const i=o.p+"assets/images/2-Account-id-4ac0bcea28543803571a6f1211af4495.png"},6749:(e,a,o)=>{o.d(a,{Z:()=>i});const i=o.p+"assets/images/3.1-Device-endpoint-7109151e8d06555b5a4e706dc26d9d2f.png"},7964:(e,a,o)=>{o.d(a,{Z:()=>i});const i=o.p+"assets/images/3.2-Menuconfig-49a52cb36a4edc9b1e00093697627052.png"},3135:(e,a,o)=>{o.d(a,{Z:()=>i});const i=o.p+"assets/images/4-MenuActivity-37174ab453b4c48389ee792525762a0f.png"},7316:(e,a,o)=>{o.d(a,{Z:()=>i});const i=o.p+"assets/images/5-MQTTTestClient-921841744c6883b3a1f1f80db1081d19.png"}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{125:function(e,a,o){"use strict";o.r(a),o.d(a,"frontMatter",(function(){return s})),o.d(a,"metadata",(function(){return c})),o.d(a,"toc",(function(){return p})),o.d(a,"default",(function(){return b}));var t=o(3),i=o(7),n=(o(0),o(165)),r=["components"],s={id:"franzininho-wifi-espidf-05",title:"Primeiros passos com a AWS",slug:"/franzininho-wifi/exemplos-espidf/aws",description:"Primeiros passos para conectar a Franzininho WiFi na AWS via MQTT pelo AWS IoT Core.",author:"Ana Carolina Cabral (ana.cpmelo95@gmail.com)"},c={unversionedId:"FranzininhoWifi/exemplos-espidf/franzininho-wifi-espidf-05",id:"FranzininhoWifi/exemplos-espidf/franzininho-wifi-espidf-05",isDocsHomePage:!1,title:"Primeiros passos com a AWS",description:"Primeiros passos para conectar a Franzininho WiFi na AWS via MQTT pelo AWS IoT Core.",source:"@site/docs/FranzininhoWifi/exemplos-espidf/0x05-AWS-IoT-Core.md",slug:"/franzininho-wifi/exemplos-espidf/aws",permalink:"/docs/franzininho-wifi/exemplos-espidf/aws",editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-espidf/0x05-AWS-IoT-Core.md",version:"current",sidebar:"docs",previous:{title:"PWM com LEDC",permalink:"/docs/franzininho-wifi/exemplos-espidf/ledc"},next:{title:"Primeiros Passos",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/primeiros-passos"}},p=[{value:"Introdu\xe7\xe3o",id:"introdu\xe7\xe3o",children:[]},{value:"AWS IOT Core",id:"aws-iot-core",children:[]},{value:"Parte 1 - Criando a Franzininho na AWS",id:"parte-1---criando-a-franzininho-na-aws",children:[]},{value:"Parte 2 - Conectando a Franzininho com ESP-IDF",id:"parte-2---conectando-a-franzininho-com-esp-idf",children:[]},{value:"Parte 3 - Monitorando a Franzininho",id:"parte-3---monitorando-a-franzininho",children:[]}],l={toc:p};function b(e){var a=e.components,s=Object(i.a)(e,r);return Object(n.b)("wrapper",Object(t.a)({},l,s,{components:a,mdxType:"MDXLayout"}),Object(n.b)("h3",{id:"introdu\xe7\xe3o"},"Introdu\xe7\xe3o"),Object(n.b)("p",null,"Neste tutorial exploraremos a utiliza\xe7\xe3o do AWS IoT Core para conectar a placa Franzininho WiFi \xe0 nuvem utilizando o ESP-IDF. Al\xe9m do IoT Core, a AWS oferece v\xe1rias outras formas de conectar um dispositivo, como AWS IoT Greengrass Stream Manager ou AWS IoT SiteWise. Esses outros servi\xe7os para ingest\xe3o e visualiza\xe7\xe3o de dados podem ser vistos nesse ",Object(n.b)("a",{parentName:"p",href:"https://aws.amazon.com/pt/blogs/iot/7-patterns-for-iot-data-ingestion-and-visualization-how-to-decide-what-works-best-for-your-use-case/"},"link"),"."),Object(n.b)("h3",{id:"aws-iot-core"},"AWS IOT Core"),Object(n.b)("p",null,"O AWS IoT Core \xe9 o broker de mensagens que permite conectar dispositivos IoT com a nuvem AWS e seus diversos servi\xe7os. Atrav\xe9s dele, podemos criar, configurar e gerenciar nossos dispositivos."),Object(n.b)("p",null,"Atualmente suporta os seguintes protocolos de comunica\xe7\xe3o:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"MQTT"),Object(n.b)("li",{parentName:"ul"},"MQTT over WSS (Websockets Secure)"),Object(n.b)("li",{parentName:"ul"},"HTTPS"),Object(n.b)("li",{parentName:"ul"},"LoRaWAN")),Object(n.b)("p",null,"Resumidamente, o servi\xe7o se baseia em:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"Things:")," Dispositivos (\u201ccoisas\u201d) que queremos conectar;"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"Jobs:")," A\xe7\xf5es remotas que voc\xea pode agendar para realizar opera\xe7\xf5es nos seus dispositivos, como atualiza\xe7\xf5es de firmware;"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"Rules:")," Regras atrav\xe9s das quais podemos direcionar as mensagens recebidas pelo broker para outros servi\xe7os da AWS, por exemplo, para armazenar dados no DynamoDB."),Object(n.b)("li",{parentName:"ul"},Object(n.b)("strong",{parentName:"li"},"Seguran\xe7a:")," onde \xe9 poss\xedvel gerenciar os certificados de autoriza\xe7\xe3o, pol\xedticas (policies) e papeis (roles) de autentica\xe7\xe3o.")),Object(n.b)("h3",{id:"parte-1---criando-a-franzininho-na-aws"},"Parte 1 - Criando a Franzininho na AWS"),Object(n.b)("p",null,"Para seguir o tutorial, voc\xea deve ter acesso ao console da AWS. Para come\xe7ar, vamos criar uma nova \u201ccoisa\u201d (thing) para representar nossa Franzininho na nuvem. Certifique-se que voc\xea est\xe1 na regi\xe3o mais pr\xf3xima antes de come\xe7ar, selecionando-a no menu do canto superior direito. Para o Brasil, a regi\xe3o \xe9 sa-east-1."),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Na AWS, procure pelo servi\xe7o IoT Core (",Object(n.b)("inlineCode",{parentName:"p"},"Service > Internet of Things >  IoT core"),") e crie uma nova \u201ccoisa\u201d em ",Object(n.b)("inlineCode",{parentName:"p"},"Manage > All devices > Things > Create new thing"),".")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Vamos criar apenas um dispositivo (",Object(n.b)("em",{parentName:"p"},"Create a single thing"),"), mas saiba que tamb\xe9m \xe9 poss\xedvel criar v\xe1rios de uma vez (",Object(n.b)("em",{parentName:"p"},"Create many things"),"). Voc\xea precisar\xe1 especificar as propriedades desse dispositivo:"))),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Thing name: o nome do seu dispositivo para identific\xe1-lo de forma \xfanica. Escolha sabiamente, pois essa propriedade n\xe3o pode ser alterada depois que o dispositivo \xe9 criado."),Object(n.b)("li",{parentName:"ul"},"Configura\xe7\xf5es adicionais: podem ser utilizadas para detalhar, organizar, gerenciar e pesquisar os dispositivos, como tipo, atributos ou grupos."),Object(n.b)("li",{parentName:"ul"},"Device shadow permite que o estado do seu dispositivo fique dispon\xedvel para outros servi\xe7os mesmo que ele n\xe3o esteja conectado.")),Object(n.b)("p",null,"Por enquanto, basta preencher o nome e prosseguir. Chamarei o meu carinhosamente de Franz."),Object(n.b)("p",null,Object(n.b)("img",{alt:"Criar thing",src:o(380).default})),Object(n.b)("ol",{start:3},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Para conseguir se autenticar ao seriv\xe7o da AWS, cada dispositivo deve ter um certificado. Utilizaremos o gerado automaticamente (",Object(n.b)("em",{parentName:"p"},"Auto-generate a new certificate"),"), mas voc\xea tamb\xe9m tem a op\xe7\xe3o de utilizar certificados pr\xf3prios.")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Para gerenciar o n\xedvel de acesso desse certificado aos recursos, \xe9 preciso criar uma pol\xedtica de autoriza\xe7\xe3o (",Object(n.b)("em",{parentName:"p"},"policy"),"), que \xe9 uma lista de a\xe7\xf5es permitidas ou proibidas para aquele certificado. Voc\xea pode criar uma pol\xedtica direto dessa aba, em ",Object(n.b)("em",{parentName:"p"},"Create policy"),", ou pela barra de navega\xe7\xe3o do IoT Core em ",Object(n.b)("em",{parentName:"p"},"Security > Policies"),"."))),Object(n.b)("p",null,"Uma ",Object(n.b)("em",{parentName:"p"},"policy")," deve ter um nome e uma ou mais declara\xe7\xf5es (",Object(n.b)("em",{parentName:"p"},"statements"),"). Cada declara\xe7\xe3o \xe9 composta por um ",Object(n.b)("strong",{parentName:"p"},"efeito")," de uma ",Object(n.b)("strong",{parentName:"p"},"a\xe7\xe3o")," \xe0 um ",Object(n.b)("strong",{parentName:"p"},"recurso"),"."),Object(n.b)("p",null,"O ",Object(n.b)("strong",{parentName:"p"},"efeito")," pode ser de permiss\xe3o (",Object(n.b)("em",{parentName:"p"},"allow"),") ou proibi\xe7\xe3o (",Object(n.b)("em",{parentName:"p"},"deny"),")."),Object(n.b)("p",null,"As poss\xedveis ",Object(n.b)("strong",{parentName:"p"},"a\xe7\xf5es")," desse servi\xe7o s\xe3o v\xe1rias, mas utilizaremos as seguintes principais:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"iot:Connect:")," permite a conex\xe3o do dispositivo ao servi\xe7o;"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"iot:Publish:")," permite que o dispositivo publique mensagens no broker;"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"iot:Receive:")," permite que o dispositivo receba mensagem do broker;"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("em",{parentName:"li"},"iot:Subscribe:")," permite que o dispositivo se inscreva nos t\xf3picos do broker.")),Object(n.b)("p",null,"E o ",Object(n.b)("strong",{parentName:"p"},"recurso")," \xe9 o nome do servi\xe7o da AWS que a a\xe7\xe3o vai se utilizar, neste caso ",Object(n.b)("em",{parentName:"p"},"arn:aws:iot:",Object(n.b)("strong",{parentName:"em"},"region"),":",Object(n.b)("strong",{parentName:"em"},"account-id")),"."),Object(n.b)("p",null,"Voc\xea pode adicionar policies j\xe1 existentes utilizando a aba ",Object(n.b)("em",{parentName:"p"},"Policy Examples")," ou cri\xe1-las manualmente. Para este exemplo, utilizei as seguintes pol\xedticas:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-bash"},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": "iot:Connect",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:client/${iot:Connection.Thing.ThingName}"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Publish",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:client/${iot:Connection.Thing.ThingName}"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Subscribe",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:topicfilter/${iot:Connection.Thing.ThingName}/*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Publish",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:topic/${iot:Connection.Thing.ThingName}/*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": "iot:Receive",\n      "Resource": "arn:aws:iot:sa-east-1:<account-id>:topic/${iot:Connection.Thing.ThingName}/*"\n    }\n  ]\n}\n')),Object(n.b)("p",null,"Altere o ",Object(n.b)("inlineCode",{parentName:"p"},"<account-id>")," para o n\xfamero da sua conta, dispon\xedvel no menu do canto superior direito."),Object(n.b)("p",null,Object(n.b)("img",{alt:"Account ID",src:o(381).default})),Object(n.b)("ol",{start:5},Object(n.b)("li",{parentName:"ol"},"Por fim, baixe os arquivos de certificados e chaves que a AWS criou automaticamente para autenticar esse dispositivo. Este \xe9 o \xfanico momento que voc\xea conseguir\xe1 baixar as chaves para esse certificado, ent\xe3o guarde-as com carinho para utiliz\xe1-los no pr\xf3ximo passo.")),Object(n.b)("h3",{id:"parte-2---conectando-a-franzininho-com-esp-idf"},"Parte 2 - Conectando a Franzininho com ESP-IDF"),Object(n.b)("p",null,"Agora que temos nosso dispositivo configurado, precisamos escrever o firmware para conect\xe1-lo. A pr\xf3pria Espressif disponibiliza um SDK para comunica\xe7\xe3o com AWS IoT baseada no FreeRTOS. Para utilizar, basta clonar o reposit\xf3rio, preferencialmente direto na pasta de componentes do seu diret\xf3rio de instala\xe7\xe3o."),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/espressif/esp-aws-iot <esp-dir-path>/esp-idf/components\n")),Object(n.b)("p",null,"Dentro desse componente, j\xe1 s\xe3o disponibilizados alguns exemplos para utilizar com a AWS. Vamos come\xe7ar utilizando o exemplo b\xe1sico de MQTT em ",Object(n.b)("inlineCode",{parentName:"p"},"examples/mqtt/tls_mutual_auth"),"."),Object(n.b)("p",null,"Para configurar, utilizaremos o ",Object(n.b)("em",{parentName:"p"},"menuconfig"),":"),Object(n.b)("ol",null,Object(n.b)("li",{parentName:"ol"},"Nas configura\xe7\xf5es do exemplo (",Object(n.b)("em",{parentName:"li"},"Example Configuration"),"), insira o nome do dispositivo exatamente como foi criado na AWS (Franz, no meu caso) e o endpoint do broker MQTT, que est\xe1 dispon\xedvel no menu ",Object(n.b)("inlineCode",{parentName:"li"},"AWS IoT > Settings > Device endpoint")," na sua conta do AWS. As demais configura\xe7\xf5es podem ser deixadas como padr\xe3o.")),Object(n.b)("p",null,Object(n.b)("img",{alt:"Device Endpoint",src:o(382).default}),"\n",Object(n.b)("img",{alt:"Menuconfig",src:o(383).default})),Object(n.b)("ol",{start:2},Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"Nas configura\xe7\xf5es de rede (",Object(n.b)("em",{parentName:"p"},"Example Connection Configuration"),"), insira as configura\xe7\xf5es da sua rede Wi-Fi (SSID e senha)")),Object(n.b)("li",{parentName:"ol"},Object(n.b)("p",{parentName:"li"},"O m\xe9todo padr\xe3o de autentica\xe7\xe3o com a AWS \xe9 utilizando credenciais PKI embarcadas no diret\xf3rio certs/. Lembra dos certificados que foram gerados automaticamente ao criar um dispositivo? \xc9 aqui que voc\xea vai coloc\xe1-los para embarcar no dispositivo. Copie o certificado, a chave ",Object(n.b)("strong",{parentName:"p"},"privada")," e um dos certificados de root que voc\xea tinha armazenado anteriormente."))),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-bash"},"cp certificate.pem.crt main/certs/client.crt\ncp private.pem.key main/certs/client.key\ncp AmazonRootCAx.pem main/certs/root_cert_auth.pem\n")),Object(n.b)("p",null,"Com tudo configurado, \xe9 s\xf3 buildar e passar pra placa (siga o tutorial em ",Object(n.b)("a",{parentName:"p",href:"https://docs.franzininho.com.br/docs/franzininho-wifi/exemplos-espidf/primeiros-passos"},"Primeiros passos"),"). Este exemplo se conecta ao broker MQTT, se sobrescreve no t\xf3pico ",Object(n.b)("inlineCode",{parentName:"p"},'CLIENT_IDENTIFIER "/example/topic\u201d')," (Franz/example/topic, por exemplo) e publica mensagens de Hello World."),Object(n.b)("p",null,"Sua conex\xe3o foi estabelecida com sucesso caso receba a mensagem a seguir:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-bash"},"I (7329) coreMQTT: Connection accepted.\nI (7339) coreMQTT: Received MQTT CONNACK successfully from broker.\nI (7349) coreMQTT: MQTT connection established with the broker.\nI (7349) coreMQTT: MQTT connection successfully established with broker.\n")),Object(n.b)("h3",{id:"parte-3---monitorando-a-franzininho"},"Parte 3 - Monitorando a Franzininho"),Object(n.b)("p",null,"Agora que a Franzininho est\xe1 conectado, podemos monitorar sua atividade pelo console da AWS."),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"Voc\xea pode ver as mensagens mais recentes em ",Object(n.b)("inlineCode",{parentName:"li"},"Manage > Things > Nome do seu dispositivo > Activity"),".")),Object(n.b)("p",null,Object(n.b)("img",{alt:"Menu Activity",src:o(384).default})),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},"E voc\xea tamb\xe9m pode interagir atrav\xe9s do MQTT Test Client, por exemplo, publicando no t\xf3pico ",Object(n.b)("inlineCode",{parentName:"li"},'CLIENT_IDENTIFIER "/example/topic\u201d')," que estamos inscritos.")),Object(n.b)("p",null,Object(n.b)("img",{alt:"MQTT Test Client",src:o(385).default})),Object(n.b)("p",null,"A mensagem recebida pode ser vista na Franzininho:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-bash"},'I (17668) coreMQTT: Packet received. ReceivedBytes=66.\nI (17668) coreMQTT: De-serialized incoming PUBLISH packet: DeserializerResult=MQTTSuccess.\nI (17668) coreMQTT: State record updated. New state=MQTTPublishDone.\nI (17678) coreMQTT: Incoming QOS : 0.\nI (17678) coreMQTT: Incoming Publish Topic Name: Franz/example/topic matches subscribed topic.\nIncoming Publish message Packet Id is 0.\nIncoming Publish Message : {\n  "message": "Hello from AWS IoT console"\n}.\n')),Object(n.b)("p",null,"E \xe9 isso, agora voc\xea pode brincar de Internet das Coisas com sua Franzininho WiFi utilizando a AWS!"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",{parentName:"tr",align:null},"Autora"),Object(n.b)("th",{parentName:"tr",align:null},Object(n.b)("a",{parentName:"th",href:"https://github.com/carolcabral"},"Ana Carolina Cabral ")))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",{parentName:"tr",align:null},"Data:"),Object(n.b)("td",{parentName:"tr",align:null},"07/01/2023")))))}b.isMDXComponent=!0},165:function(e,a,o){"use strict";o.d(a,"a",(function(){return b})),o.d(a,"b",(function(){return d}));var t=o(0),i=o.n(t);function n(e,a,o){return a in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o,e}function r(e,a){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),o.push.apply(o,t)}return o}function s(e){for(var a=1;a<arguments.length;a++){var o=null!=arguments[a]?arguments[a]:{};a%2?r(Object(o),!0).forEach((function(a){n(e,a,o[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(o,a))}))}return e}function c(e,a){if(null==e)return{};var o,t,i=function(e,a){if(null==e)return{};var o,t,i={},n=Object.keys(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||(i[o]=e[o]);return i}(e,a);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(t=0;t<n.length;t++)o=n[t],a.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var p=i.a.createContext({}),l=function(e){var a=i.a.useContext(p),o=a;return e&&(o="function"==typeof e?e(a):s(s({},a),e)),o},b=function(e){var a=l(e.components);return i.a.createElement(p.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return i.a.createElement(i.a.Fragment,{},a)}},u=i.a.forwardRef((function(e,a){var o=e.components,t=e.mdxType,n=e.originalType,r=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(o),u=t,d=b["".concat(r,".").concat(u)]||b[u]||m[u]||n;return o?i.a.createElement(d,s(s({ref:a},p),{},{components:o})):i.a.createElement(d,s({ref:a},p))}));function d(e,a){var o=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var n=o.length,r=new Array(n);r[0]=u;var s={};for(var c in a)hasOwnProperty.call(a,c)&&(s[c]=a[c]);s.originalType=e,s.mdxType="string"==typeof e?e:t,r[1]=s;for(var p=2;p<n;p++)r[p]=o[p];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,o)}u.displayName="MDXCreateElement"},380:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/1-Create-thing-38ca8a9bbe949f6fd7bb29c1746f3175.png"},381:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/2-Account-id-4ac0bcea28543803571a6f1211af4495.png"},382:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/3.1-Device-endpoint-7109151e8d06555b5a4e706dc26d9d2f.png"},383:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/3.2-Menuconfig-49a52cb36a4edc9b1e00093697627052.png"},384:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/4-MenuActivity-37174ab453b4c48389ee792525762a0f.png"},385:function(e,a,o){"use strict";o.r(a),a.default=o.p+"assets/images/5-MQTTTestClient-921841744c6883b3a1f1f80db1081d19.png"}}]);
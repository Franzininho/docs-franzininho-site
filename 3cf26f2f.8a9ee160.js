(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{174:function(e,a,n){"use strict";n.d(a,"a",(function(){return d})),n.d(a,"b",(function(){return m}));var i=n(0),o=n.n(i);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);a&&(i=i.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,i,o=function(e,a){if(null==e)return{};var n,i,o={},t=Object.keys(e);for(i=0;i<t.length;i++)n=t[i],a.indexOf(n)>=0||(o[n]=e[n]);return o}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(i=0;i<t.length;i++)n=t[i],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),p=function(e){var a=o.a.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):c(c({},a),e)),n},d=function(e){var a=p(e.components);return o.a.createElement(s.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return o.a.createElement(o.a.Fragment,{},a)}},b=o.a.forwardRef((function(e,a){var n=e.components,i=e.mdxType,t=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),b=i,m=d["".concat(r,".").concat(b)]||d[b]||u[b]||t;return n?o.a.createElement(m,c(c({ref:a},s),{},{components:n})):o.a.createElement(m,c({ref:a},s))}));function m(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var t=n.length,r=new Array(t);r[0]=b;var c={};for(var l in a)hasOwnProperty.call(a,l)&&(c[l]=a[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var s=2;s<t;s++)r[s]=n[s];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},301:function(e,a,n){"use strict";n.r(a),a.default=n.p+"assets/images/franzininho-wifi-3b55bb6358735fdb9708737760477e5b.png"},302:function(e,a,n){"use strict";n.r(a),a.default=n.p+"assets/images/neopixel-6aba6a8ee3594d17ac2240dff080b576.png"},303:function(e,a,n){"use strict";n.r(a),a.default=n.p+"assets/images/mu1-d9e439fb33fd6469d96b580d0c518400.png"},304:function(e,a,n){"use strict";n.r(a),a.default=n.p+"assets/images/mu2-22111a44455aac8485e7acee915aa990.png"},305:function(e,a,n){"use strict";n.r(a),a.default=n.p+"assets/images/exemplo2-21fdde314416eddf012a6910081a7e2e.jpeg"},306:function(e,a,n){"use strict";n.r(a),a.default=n.p+"assets/images/exemplo3-be8b96c2fcf53cdaa581d2996e897d4d.jpeg"},87:function(e,a,n){"use strict";n.r(a),n.d(a,"frontMatter",(function(){return c})),n.d(a,"metadata",(function(){return l})),n.d(a,"toc",(function(){return s})),n.d(a,"default",(function(){return d}));var i=n(3),o=n(7),t=(n(0),n(174)),r=["components"],c={id:"circuitpython-serial-console",title:"Serial Console",slug:"/franzininho-wifi/exemplos-circuitpython/serial-console",description:"Neste texto vamos utilizar a comunica\xe7\xe3o serial do Franzininho WiFi para imprimir e coleta valores do console.",author:"Ewerton Leandro"},l={unversionedId:"FranzininhoWifi/exemplos-circuitpython/circuitpython-serial-console",id:"FranzininhoWifi/exemplos-circuitpython/circuitpython-serial-console",isDocsHomePage:!1,title:"Serial Console",description:"Neste texto vamos utilizar a comunica\xe7\xe3o serial do Franzininho WiFi para imprimir e coleta valores do console.",source:"@site/docs/FranzininhoWifi/exemplos-circuitpython/serial-console.md",slug:"/franzininho-wifi/exemplos-circuitpython/serial-console",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/serial-console",editUrl:"https://github.com/Franzininho/docs-franzininho-site/edit/main/docs/FranzininhoWifi/exemplos-circuitpython/serial-console.md",version:"current",sidebar:"docs",previous:{title:"Hello World!",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/hello-world"},next:{title:"Entradas e Sa\xeddas Digitais",permalink:"/docs/franzininho-wifi/exemplos-circuitpython/entradas-saidas-digitais"}},s=[{value:"Materiais necess\xe1rios",id:"materiais-necess\xe1rios",children:[]},{value:"Circuito",id:"circuito",children:[]},{value:"C\xf3digo",id:"c\xf3digo",children:[]},{value:"An\xe1lise do c\xf3digo",id:"an\xe1lise-do-c\xf3digo",children:[]},{value:"Execu\xe7\xe3o",id:"execu\xe7\xe3o",children:[]},{value:"Conclus\xe3o",id:"conclus\xe3o",children:[]}],p={toc:s};function d(e){var a=e.components,c=Object(o.a)(e,r);return Object(t.b)("wrapper",Object(i.a)({},p,c,{components:a,mdxType:"MDXLayout"}),Object(t.b)("p",null,"Neste exemplo iremos utilizar o console serial para controlar a cor do LED da Franzininho WiFi com CircuitPython. "),Object(t.b)("h2",{id:"materiais-necess\xe1rios"},"Materiais necess\xe1rios"),Object(t.b)("ul",null,Object(t.b)("li",{parentName:"ul"},"1 Placa Franzininho Wifi com CircuitPython;")),Object(t.b)("h2",{id:"circuito"},"Circuito"),Object(t.b)("p",null,"Para este exemplo n\xe3o ser\xe1 necess\xe1rio nenhum componente extra, apenas a placa Franzininho WiFi:"),Object(t.b)("p",null,Object(t.b)("img",{alt:"franzininho-wifi-serial-console",src:n(301).default})),Object(t.b)("p",null,"Obs. Neste exemplo vamos utilizar o Mu Editor, mas qualquer editor com suporte a comunica\xe7\xe3o serial pode ser utilizado."),Object(t.b)("h2",{id:"c\xf3digo"},"C\xf3digo"),Object(t.b)("p",null,"Digite o c\xf3digo abaixo no arquivo code.py que est\xe1 no diret\xf3rio CIRCUITPY e salve o arquivo:"),Object(t.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(t.b)("div",{parentName:"div",className:"admonition-heading"},Object(t.b)("h5",{parentName:"div"},Object(t.b)("span",{parentName:"h5",className:"admonition-icon"},Object(t.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(t.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Observa\xe7\xe3o")),Object(t.b)("div",{parentName:"div",className:"admonition-content"},Object(t.b)("p",{parentName:"div"},"Provavelmente voc\xea encontrar\xe1 outro c\xf3digo no arquivo code.py.\nApague-o e insira o c\xf3digo novo."))),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},'# code.py\n\n""" Controle da cor do LED RGB atrav\xe9s da serial console """\nimport board\nimport digitalio\nimport neopixel_write\n\npin = digitalio.DigitalInOut(board.NEOPIXEL)\npin.direction = digitalio.Direction.OUTPUT\n\nwhile True:\n    print("Digite a intesidade da cor vermelho:")\n    r = int(input())\n    print("Digite a intesidade da cor verde:")\n    g = int(input())\n    print("Digite a intesidade da cor azul:")\n    b = int(input())\n    cor = bytearray([r, g, b])\n    neopixel_write.neopixel_write(pin, cor)\n    print("Cor: {} {} {}".format(r,g,b) )\n    print("[ENTER] - para mudar a cor.")\n    input()\n')),Object(t.b)("p",null,"Finalizando a edi\xe7\xe3o do arquivo, salve-o.\nAp\xf3s salvar o arquivo, abra o console serial do Mu Editor."),Object(t.b)("h2",{id:"an\xe1lise-do-c\xf3digo"},"An\xe1lise do c\xf3digo"),Object(t.b)("p",null,"Para acessar os pinos da placa precisamos importar o m\xf3dulo board:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"import board\n")),Object(t.b)("p",null,"Utilizaremos o LED Neopixel existente na pr\xf3pria placa da Franzininho WiFi, este LED est\xe1 conectado a GPIO 18 do ESP32-S2 da Franzininho WiFi."),Object(t.b)("p",null,Object(t.b)("img",{alt:"franzininho-wifi-serial-console",src:n(302).default})),Object(t.b)("p",null,"Como o LED \xe9 um atuador, precisamos configurar o pino como uma sa\xedda digital. Para isso, precisamos importar o m\xf3dulo:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre"},"import digitalio\n")),Object(t.b)("p",null,"O LED RGB Neopixel utiliza um protocolo de comunica\xe7\xe3o espec\xedfico j\xe1 que dentro do LED existe um chip de controle integrado que controla os tr\xeas LED dentro do encapsulamento.\nPara facilitar a implementa\xe7\xe3o de nosso programa, optamos por utilizar um biblioteca dispon\xedvel dentro do pr\xf3prio circuitpython que \xe9 a neopixel_write:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"import neopixel_write\n")),Object(t.b)("p",null,"Com todos os m\xf3dulos importados, podemos acessar as fun\xe7\xf5es de configura\xe7\xe3o do pino digital:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"pin = digitalio.DigitalInOut(board.NEOPIXEL)\npin.direction = digitalio.Direction.OUTPUT\n")),Object(t.b)("p",null,"Note que primeiro mapeamos o pino e depois configuramos a dire\xe7\xe3o."),Object(t.b)("p",null,"Diferentemente de outros framework como Arduino, ESP-IDF e a maioria dos framework escrito em C/C++, o interpretador do Python j\xe1 habilitar UART para a comunica\xe7\xe3o serial por padr\xe3o, dispensado a inicializa\xe7\xe3o da serial como seria no Arduino por exemplo."),Object(t.b)("p",null,"Fragmento de c\xf3digo necess\xe1rio para configurar a comunica\xe7\xe3o serial no Arduino:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-c++"},"Serial.begin(115200);\n")),Object(t.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(t.b)("div",{parentName:"div",className:"admonition-heading"},Object(t.b)("h5",{parentName:"div"},Object(t.b)("span",{parentName:"h5",className:"admonition-icon"},Object(t.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(t.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Dica")),Object(t.b)("div",{parentName:"div",className:"admonition-content"},Object(t.b)("p",{parentName:"div"},"Nunca mais voc\xea vai esquecer de habilitar a serial antes de tentar imprimir. \ud83d\ude09"))),Object(t.b)("p",null,"Neste exemplo duas fun\xe7\xf5es s\xe3o importante destacar. S\xe3o as fun\xe7\xf5es que permite escrever e ler dados do console."),Object(t.b)("p",null,'A fun\xe7\xe3o "print" para imprimir mensagem no console serial.'),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},'print("Algum coisa para ser impresso na serial")\n')),Object(t.b)("p",null,'E a fun\xe7\xe3o "input" para ler valores do console serial.'),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"uma_variavel = input()\n")),Object(t.b)("p",null,"Agora vamos criar nosso loop principal:"),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"while True:\n    print('Digite a intensidade da cor vermelho:')\n    r = int(input())\n    print('Digite a intensidade da cor verde:')\n    g = int(input())\n    print('Digite a intensidade da cor azul:')\n    b = int(input())\n    cor = bytearray([r, g, b])\n    neopixel_write.neopixel_write(pin, cor)\n    print('Cor: {} {} {}'.format(r,g,b) )\n    print('[ENTER] - para mudar a cor.')\n    input()\n")),Object(t.b)("p",null,"No loop principal iremos utilizar as fun\xe7\xf5es print/input para ler o valor das cores dos tr\xeas LED."),Object(t.b)("p",null,"Iremos montar um bytearray e chamar a fun\xe7\xe3o neopixel_write para atualizar a cor do LED Neopixel."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"cor = bytearray([r, g, b])\n")),Object(t.b)("p",null,"A fun\xe7\xe3o neopixel_write precisa apenas de dois par\xe2metros, o pino onde est\xe1 conectado o LED e um bytearray contendo um byte para cada uma das cores do LED."),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-python"},"neopixel_write.neopixel_write(pin, cor)\n")),Object(t.b)("p",null,"O bytearray segue o seguinte formato: primeiro byte representa a intensidade do LED vermelho (Red), o segundo byte representa a intensidade do LED verde (Green) e o terceiro byte representa a intensidade do LED azul (Blue)."),Object(t.b)("h2",{id:"execu\xe7\xe3o"},"Execu\xe7\xe3o"),Object(t.b)("p",null,'Para abrir o console serial no Mu Editor, click no bot\xe3o "Serial" e depois pressione "Ctrl + D" para reiniciar a execu\xe7\xe3o do script na placa. Logo em seguida voc\xea poder\xe1 ver a primeira mensagem do script, solicitado o valor da primeira cor no console, a cor vermelha.'),Object(t.b)("p",null,Object(t.b)("img",{alt:"franzininho-wifi-serial-console",src:n(303).default})),Object(t.b)("p",null,"Aqui temos um exemplo de execu\xe7\xe3o no console serial do Mu Editor."),Object(t.b)("p",null,Object(t.b)("img",{alt:"franzininho-wifi-serial-console",src:n(304).default})),Object(t.b)("p",null,"Resultado da execu\xe7\xe3o na placa Franzininho WiFi."),Object(t.b)("p",null,Object(t.b)("img",{alt:"franzininho-wifi-serial-console",src:n(305).default})),Object(t.b)("p",null,"Outro exemplo de execu\xe7\xe3o."),Object(t.b)("p",null,Object(t.b)("img",{alt:"franzininho-wifi-serial-console",src:n(306).default})),Object(t.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(t.b)("div",{parentName:"div",className:"admonition-heading"},Object(t.b)("h5",{parentName:"div"},Object(t.b)("span",{parentName:"h5",className:"admonition-icon"},Object(t.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(t.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Sugest\xe3o de experimento")),Object(t.b)("div",{parentName:"div",className:"admonition-content"},Object(t.b)("p",{parentName:"div"},"Execute uma informando os valores ","[10,10,10]",", execute novamente agora informando os valores ","[100,100,100]"," e observe a diferen\xe7a entre as duas execu\xe7\xf5es."))),Object(t.b)("h2",{id:"conclus\xe3o"},"Conclus\xe3o"),Object(t.b)("p",null,"Neste exemplo exploramos duas importante ferramentas no desenvolvimento de qualquer projeto, a comunica\xe7\xe3o serial do console e o LED Builtin da placa Franzininho WiFi que tamb\xe9m \xe9 um LED Neopixel que pode dar um charme a mais a seus projetos!!!"),Object(t.b)("table",null,Object(t.b)("thead",{parentName:"table"},Object(t.b)("tr",{parentName:"thead"},Object(t.b)("th",{parentName:"tr",align:null},"Autor"),Object(t.b)("th",{parentName:"tr",align:null},"Ewerton Leandro de Sousa"))),Object(t.b)("tbody",{parentName:"table"},Object(t.b)("tr",{parentName:"tbody"},Object(t.b)("td",{parentName:"tr",align:null},"Data:"),Object(t.b)("td",{parentName:"tr",align:null},"07/10/2021")))))}d.isMDXComponent=!0}}]);